// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package assetprofile

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_Entry_13_list)(nil)

type _Entry_13_list struct {
	list *[]string
}

func (x *_Entry_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Entry_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_Entry_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_Entry_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_Entry_13_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message Entry at list field Permissions as it is not of Message kind"))
}

func (x *_Entry_13_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_Entry_13_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_Entry_13_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Entry                             protoreflect.MessageDescriptor
	fd_Entry_base_denom                  protoreflect.FieldDescriptor
	fd_Entry_decimals                    protoreflect.FieldDescriptor
	fd_Entry_denom                       protoreflect.FieldDescriptor
	fd_Entry_path                        protoreflect.FieldDescriptor
	fd_Entry_ibc_channel_id              protoreflect.FieldDescriptor
	fd_Entry_ibc_counterparty_channel_id protoreflect.FieldDescriptor
	fd_Entry_display_name                protoreflect.FieldDescriptor
	fd_Entry_display_symbol              protoreflect.FieldDescriptor
	fd_Entry_network                     protoreflect.FieldDescriptor
	fd_Entry_address                     protoreflect.FieldDescriptor
	fd_Entry_external_symbol             protoreflect.FieldDescriptor
	fd_Entry_transfer_limit              protoreflect.FieldDescriptor
	fd_Entry_permissions                 protoreflect.FieldDescriptor
	fd_Entry_unit_denom                  protoreflect.FieldDescriptor
	fd_Entry_ibc_counterparty_denom      protoreflect.FieldDescriptor
	fd_Entry_ibc_counterparty_chain_id   protoreflect.FieldDescriptor
	fd_Entry_authority                   protoreflect.FieldDescriptor
	fd_Entry_commit_enabled              protoreflect.FieldDescriptor
	fd_Entry_withdraw_enabled            protoreflect.FieldDescriptor
)

func init() {
	file_elys_assetprofile_entry_proto_init()
	md_Entry = File_elys_assetprofile_entry_proto.Messages().ByName("Entry")
	fd_Entry_base_denom = md_Entry.Fields().ByName("base_denom")
	fd_Entry_decimals = md_Entry.Fields().ByName("decimals")
	fd_Entry_denom = md_Entry.Fields().ByName("denom")
	fd_Entry_path = md_Entry.Fields().ByName("path")
	fd_Entry_ibc_channel_id = md_Entry.Fields().ByName("ibc_channel_id")
	fd_Entry_ibc_counterparty_channel_id = md_Entry.Fields().ByName("ibc_counterparty_channel_id")
	fd_Entry_display_name = md_Entry.Fields().ByName("display_name")
	fd_Entry_display_symbol = md_Entry.Fields().ByName("display_symbol")
	fd_Entry_network = md_Entry.Fields().ByName("network")
	fd_Entry_address = md_Entry.Fields().ByName("address")
	fd_Entry_external_symbol = md_Entry.Fields().ByName("external_symbol")
	fd_Entry_transfer_limit = md_Entry.Fields().ByName("transfer_limit")
	fd_Entry_permissions = md_Entry.Fields().ByName("permissions")
	fd_Entry_unit_denom = md_Entry.Fields().ByName("unit_denom")
	fd_Entry_ibc_counterparty_denom = md_Entry.Fields().ByName("ibc_counterparty_denom")
	fd_Entry_ibc_counterparty_chain_id = md_Entry.Fields().ByName("ibc_counterparty_chain_id")
	fd_Entry_authority = md_Entry.Fields().ByName("authority")
	fd_Entry_commit_enabled = md_Entry.Fields().ByName("commit_enabled")
	fd_Entry_withdraw_enabled = md_Entry.Fields().ByName("withdraw_enabled")
}

var _ protoreflect.Message = (*fastReflection_Entry)(nil)

type fastReflection_Entry Entry

func (x *Entry) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Entry)(x)
}

func (x *Entry) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_assetprofile_entry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Entry_messageType fastReflection_Entry_messageType
var _ protoreflect.MessageType = fastReflection_Entry_messageType{}

type fastReflection_Entry_messageType struct{}

func (x fastReflection_Entry_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Entry)(nil)
}
func (x fastReflection_Entry_messageType) New() protoreflect.Message {
	return new(fastReflection_Entry)
}
func (x fastReflection_Entry_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Entry
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Entry) Descriptor() protoreflect.MessageDescriptor {
	return md_Entry
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Entry) Type() protoreflect.MessageType {
	return _fastReflection_Entry_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Entry) New() protoreflect.Message {
	return new(fastReflection_Entry)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Entry) Interface() protoreflect.ProtoMessage {
	return (*Entry)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Entry) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_Entry_base_denom, value) {
			return
		}
	}
	if x.Decimals != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Decimals)
		if !f(fd_Entry_decimals, value) {
			return
		}
	}
	if x.Denom != "" {
		value := protoreflect.ValueOfString(x.Denom)
		if !f(fd_Entry_denom, value) {
			return
		}
	}
	if x.Path != "" {
		value := protoreflect.ValueOfString(x.Path)
		if !f(fd_Entry_path, value) {
			return
		}
	}
	if x.IbcChannelId != "" {
		value := protoreflect.ValueOfString(x.IbcChannelId)
		if !f(fd_Entry_ibc_channel_id, value) {
			return
		}
	}
	if x.IbcCounterpartyChannelId != "" {
		value := protoreflect.ValueOfString(x.IbcCounterpartyChannelId)
		if !f(fd_Entry_ibc_counterparty_channel_id, value) {
			return
		}
	}
	if x.DisplayName != "" {
		value := protoreflect.ValueOfString(x.DisplayName)
		if !f(fd_Entry_display_name, value) {
			return
		}
	}
	if x.DisplaySymbol != "" {
		value := protoreflect.ValueOfString(x.DisplaySymbol)
		if !f(fd_Entry_display_symbol, value) {
			return
		}
	}
	if x.Network != "" {
		value := protoreflect.ValueOfString(x.Network)
		if !f(fd_Entry_network, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_Entry_address, value) {
			return
		}
	}
	if x.ExternalSymbol != "" {
		value := protoreflect.ValueOfString(x.ExternalSymbol)
		if !f(fd_Entry_external_symbol, value) {
			return
		}
	}
	if x.TransferLimit != "" {
		value := protoreflect.ValueOfString(x.TransferLimit)
		if !f(fd_Entry_transfer_limit, value) {
			return
		}
	}
	if len(x.Permissions) != 0 {
		value := protoreflect.ValueOfList(&_Entry_13_list{list: &x.Permissions})
		if !f(fd_Entry_permissions, value) {
			return
		}
	}
	if x.UnitDenom != "" {
		value := protoreflect.ValueOfString(x.UnitDenom)
		if !f(fd_Entry_unit_denom, value) {
			return
		}
	}
	if x.IbcCounterpartyDenom != "" {
		value := protoreflect.ValueOfString(x.IbcCounterpartyDenom)
		if !f(fd_Entry_ibc_counterparty_denom, value) {
			return
		}
	}
	if x.IbcCounterpartyChainId != "" {
		value := protoreflect.ValueOfString(x.IbcCounterpartyChainId)
		if !f(fd_Entry_ibc_counterparty_chain_id, value) {
			return
		}
	}
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_Entry_authority, value) {
			return
		}
	}
	if x.CommitEnabled != false {
		value := protoreflect.ValueOfBool(x.CommitEnabled)
		if !f(fd_Entry_commit_enabled, value) {
			return
		}
	}
	if x.WithdrawEnabled != false {
		value := protoreflect.ValueOfBool(x.WithdrawEnabled)
		if !f(fd_Entry_withdraw_enabled, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Entry) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.assetprofile.Entry.base_denom":
		return x.BaseDenom != ""
	case "elys.assetprofile.Entry.decimals":
		return x.Decimals != uint64(0)
	case "elys.assetprofile.Entry.denom":
		return x.Denom != ""
	case "elys.assetprofile.Entry.path":
		return x.Path != ""
	case "elys.assetprofile.Entry.ibc_channel_id":
		return x.IbcChannelId != ""
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		return x.IbcCounterpartyChannelId != ""
	case "elys.assetprofile.Entry.display_name":
		return x.DisplayName != ""
	case "elys.assetprofile.Entry.display_symbol":
		return x.DisplaySymbol != ""
	case "elys.assetprofile.Entry.network":
		return x.Network != ""
	case "elys.assetprofile.Entry.address":
		return x.Address != ""
	case "elys.assetprofile.Entry.external_symbol":
		return x.ExternalSymbol != ""
	case "elys.assetprofile.Entry.transfer_limit":
		return x.TransferLimit != ""
	case "elys.assetprofile.Entry.permissions":
		return len(x.Permissions) != 0
	case "elys.assetprofile.Entry.unit_denom":
		return x.UnitDenom != ""
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		return x.IbcCounterpartyDenom != ""
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		return x.IbcCounterpartyChainId != ""
	case "elys.assetprofile.Entry.authority":
		return x.Authority != ""
	case "elys.assetprofile.Entry.commit_enabled":
		return x.CommitEnabled != false
	case "elys.assetprofile.Entry.withdraw_enabled":
		return x.WithdrawEnabled != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Entry) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.assetprofile.Entry.base_denom":
		x.BaseDenom = ""
	case "elys.assetprofile.Entry.decimals":
		x.Decimals = uint64(0)
	case "elys.assetprofile.Entry.denom":
		x.Denom = ""
	case "elys.assetprofile.Entry.path":
		x.Path = ""
	case "elys.assetprofile.Entry.ibc_channel_id":
		x.IbcChannelId = ""
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		x.IbcCounterpartyChannelId = ""
	case "elys.assetprofile.Entry.display_name":
		x.DisplayName = ""
	case "elys.assetprofile.Entry.display_symbol":
		x.DisplaySymbol = ""
	case "elys.assetprofile.Entry.network":
		x.Network = ""
	case "elys.assetprofile.Entry.address":
		x.Address = ""
	case "elys.assetprofile.Entry.external_symbol":
		x.ExternalSymbol = ""
	case "elys.assetprofile.Entry.transfer_limit":
		x.TransferLimit = ""
	case "elys.assetprofile.Entry.permissions":
		x.Permissions = nil
	case "elys.assetprofile.Entry.unit_denom":
		x.UnitDenom = ""
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		x.IbcCounterpartyDenom = ""
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		x.IbcCounterpartyChainId = ""
	case "elys.assetprofile.Entry.authority":
		x.Authority = ""
	case "elys.assetprofile.Entry.commit_enabled":
		x.CommitEnabled = false
	case "elys.assetprofile.Entry.withdraw_enabled":
		x.WithdrawEnabled = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Entry) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.assetprofile.Entry.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.decimals":
		value := x.Decimals
		return protoreflect.ValueOfUint64(value)
	case "elys.assetprofile.Entry.denom":
		value := x.Denom
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.path":
		value := x.Path
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.ibc_channel_id":
		value := x.IbcChannelId
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		value := x.IbcCounterpartyChannelId
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.display_name":
		value := x.DisplayName
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.display_symbol":
		value := x.DisplaySymbol
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.network":
		value := x.Network
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.external_symbol":
		value := x.ExternalSymbol
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.transfer_limit":
		value := x.TransferLimit
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.permissions":
		if len(x.Permissions) == 0 {
			return protoreflect.ValueOfList(&_Entry_13_list{})
		}
		listValue := &_Entry_13_list{list: &x.Permissions}
		return protoreflect.ValueOfList(listValue)
	case "elys.assetprofile.Entry.unit_denom":
		value := x.UnitDenom
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		value := x.IbcCounterpartyDenom
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		value := x.IbcCounterpartyChainId
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "elys.assetprofile.Entry.commit_enabled":
		value := x.CommitEnabled
		return protoreflect.ValueOfBool(value)
	case "elys.assetprofile.Entry.withdraw_enabled":
		value := x.WithdrawEnabled
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Entry) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.assetprofile.Entry.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "elys.assetprofile.Entry.decimals":
		x.Decimals = value.Uint()
	case "elys.assetprofile.Entry.denom":
		x.Denom = value.Interface().(string)
	case "elys.assetprofile.Entry.path":
		x.Path = value.Interface().(string)
	case "elys.assetprofile.Entry.ibc_channel_id":
		x.IbcChannelId = value.Interface().(string)
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		x.IbcCounterpartyChannelId = value.Interface().(string)
	case "elys.assetprofile.Entry.display_name":
		x.DisplayName = value.Interface().(string)
	case "elys.assetprofile.Entry.display_symbol":
		x.DisplaySymbol = value.Interface().(string)
	case "elys.assetprofile.Entry.network":
		x.Network = value.Interface().(string)
	case "elys.assetprofile.Entry.address":
		x.Address = value.Interface().(string)
	case "elys.assetprofile.Entry.external_symbol":
		x.ExternalSymbol = value.Interface().(string)
	case "elys.assetprofile.Entry.transfer_limit":
		x.TransferLimit = value.Interface().(string)
	case "elys.assetprofile.Entry.permissions":
		lv := value.List()
		clv := lv.(*_Entry_13_list)
		x.Permissions = *clv.list
	case "elys.assetprofile.Entry.unit_denom":
		x.UnitDenom = value.Interface().(string)
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		x.IbcCounterpartyDenom = value.Interface().(string)
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		x.IbcCounterpartyChainId = value.Interface().(string)
	case "elys.assetprofile.Entry.authority":
		x.Authority = value.Interface().(string)
	case "elys.assetprofile.Entry.commit_enabled":
		x.CommitEnabled = value.Bool()
	case "elys.assetprofile.Entry.withdraw_enabled":
		x.WithdrawEnabled = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Entry) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.assetprofile.Entry.permissions":
		if x.Permissions == nil {
			x.Permissions = []string{}
		}
		value := &_Entry_13_list{list: &x.Permissions}
		return protoreflect.ValueOfList(value)
	case "elys.assetprofile.Entry.base_denom":
		panic(fmt.Errorf("field base_denom of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.decimals":
		panic(fmt.Errorf("field decimals of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.denom":
		panic(fmt.Errorf("field denom of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.path":
		panic(fmt.Errorf("field path of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.ibc_channel_id":
		panic(fmt.Errorf("field ibc_channel_id of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		panic(fmt.Errorf("field ibc_counterparty_channel_id of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.display_name":
		panic(fmt.Errorf("field display_name of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.display_symbol":
		panic(fmt.Errorf("field display_symbol of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.network":
		panic(fmt.Errorf("field network of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.address":
		panic(fmt.Errorf("field address of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.external_symbol":
		panic(fmt.Errorf("field external_symbol of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.transfer_limit":
		panic(fmt.Errorf("field transfer_limit of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.unit_denom":
		panic(fmt.Errorf("field unit_denom of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		panic(fmt.Errorf("field ibc_counterparty_denom of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		panic(fmt.Errorf("field ibc_counterparty_chain_id of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.authority":
		panic(fmt.Errorf("field authority of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.commit_enabled":
		panic(fmt.Errorf("field commit_enabled of message elys.assetprofile.Entry is not mutable"))
	case "elys.assetprofile.Entry.withdraw_enabled":
		panic(fmt.Errorf("field withdraw_enabled of message elys.assetprofile.Entry is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Entry) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.assetprofile.Entry.base_denom":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.decimals":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.assetprofile.Entry.denom":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.path":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.ibc_channel_id":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.ibc_counterparty_channel_id":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.display_name":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.display_symbol":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.network":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.address":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.external_symbol":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.transfer_limit":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.permissions":
		list := []string{}
		return protoreflect.ValueOfList(&_Entry_13_list{list: &list})
	case "elys.assetprofile.Entry.unit_denom":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.ibc_counterparty_denom":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.ibc_counterparty_chain_id":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.authority":
		return protoreflect.ValueOfString("")
	case "elys.assetprofile.Entry.commit_enabled":
		return protoreflect.ValueOfBool(false)
	case "elys.assetprofile.Entry.withdraw_enabled":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.assetprofile.Entry"))
		}
		panic(fmt.Errorf("message elys.assetprofile.Entry does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Entry) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.assetprofile.Entry", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Entry) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Entry) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Entry) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Entry) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Entry)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimals != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimals))
		}
		l = len(x.Denom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Path)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcCounterpartyChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DisplayName)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DisplaySymbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Network)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExternalSymbol)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TransferLimit)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Permissions) > 0 {
			for _, s := range x.Permissions {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.UnitDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcCounterpartyDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IbcCounterpartyChainId)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Authority)
		if l > 0 {
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if x.CommitEnabled {
			n += 3
		}
		if x.WithdrawEnabled {
			n += 3
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Entry)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.WithdrawEnabled {
			i--
			if x.WithdrawEnabled {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x98
		}
		if x.CommitEnabled {
			i--
			if x.CommitEnabled {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x90
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x8a
		}
		if len(x.IbcCounterpartyChainId) > 0 {
			i -= len(x.IbcCounterpartyChainId)
			copy(dAtA[i:], x.IbcCounterpartyChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcCounterpartyChainId)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x82
		}
		if len(x.IbcCounterpartyDenom) > 0 {
			i -= len(x.IbcCounterpartyDenom)
			copy(dAtA[i:], x.IbcCounterpartyDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcCounterpartyDenom)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.UnitDenom) > 0 {
			i -= len(x.UnitDenom)
			copy(dAtA[i:], x.UnitDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UnitDenom)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.Permissions) > 0 {
			for iNdEx := len(x.Permissions) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Permissions[iNdEx])
				copy(dAtA[i:], x.Permissions[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Permissions[iNdEx])))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.TransferLimit) > 0 {
			i -= len(x.TransferLimit)
			copy(dAtA[i:], x.TransferLimit)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TransferLimit)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.ExternalSymbol) > 0 {
			i -= len(x.ExternalSymbol)
			copy(dAtA[i:], x.ExternalSymbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExternalSymbol)))
			i--
			dAtA[i] = 0x5a
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.Network) > 0 {
			i -= len(x.Network)
			copy(dAtA[i:], x.Network)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Network)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.DisplaySymbol) > 0 {
			i -= len(x.DisplaySymbol)
			copy(dAtA[i:], x.DisplaySymbol)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DisplaySymbol)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.DisplayName) > 0 {
			i -= len(x.DisplayName)
			copy(dAtA[i:], x.DisplayName)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DisplayName)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.IbcCounterpartyChannelId) > 0 {
			i -= len(x.IbcCounterpartyChannelId)
			copy(dAtA[i:], x.IbcCounterpartyChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcCounterpartyChannelId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.IbcChannelId) > 0 {
			i -= len(x.IbcChannelId)
			copy(dAtA[i:], x.IbcChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IbcChannelId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Path) > 0 {
			i -= len(x.Path)
			copy(dAtA[i:], x.Path)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Path)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Denom) > 0 {
			i -= len(x.Denom)
			copy(dAtA[i:], x.Denom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Denom)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Decimals != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimals))
			i--
			dAtA[i] = 0x10
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Entry)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Entry: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Entry: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimals", wireType)
				}
				x.Decimals = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimals |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Denom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Path = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcCounterpartyChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcCounterpartyChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DisplayName = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DisplaySymbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DisplaySymbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Network", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Network = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExternalSymbol", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExternalSymbol = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferLimit", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TransferLimit = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Permissions", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Permissions = append(x.Permissions, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UnitDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UnitDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcCounterpartyDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcCounterpartyDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 16:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IbcCounterpartyChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IbcCounterpartyChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 17:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 18:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CommitEnabled", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.CommitEnabled = bool(v != 0)
			case 19:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithdrawEnabled", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.WithdrawEnabled = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: elys/assetprofile/entry.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseDenom                string   `protobuf:"bytes,1,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	Decimals                 uint64   `protobuf:"varint,2,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Denom                    string   `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	Path                     string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	IbcChannelId             string   `protobuf:"bytes,5,opt,name=ibc_channel_id,json=ibcChannelId,proto3" json:"ibc_channel_id,omitempty"`
	IbcCounterpartyChannelId string   `protobuf:"bytes,6,opt,name=ibc_counterparty_channel_id,json=ibcCounterpartyChannelId,proto3" json:"ibc_counterparty_channel_id,omitempty"`
	DisplayName              string   `protobuf:"bytes,7,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	DisplaySymbol            string   `protobuf:"bytes,8,opt,name=display_symbol,json=displaySymbol,proto3" json:"display_symbol,omitempty"`
	Network                  string   `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	Address                  string   `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	ExternalSymbol           string   `protobuf:"bytes,11,opt,name=external_symbol,json=externalSymbol,proto3" json:"external_symbol,omitempty"`
	TransferLimit            string   `protobuf:"bytes,12,opt,name=transfer_limit,json=transferLimit,proto3" json:"transfer_limit,omitempty"`
	Permissions              []string `protobuf:"bytes,13,rep,name=permissions,proto3" json:"permissions,omitempty"`
	UnitDenom                string   `protobuf:"bytes,14,opt,name=unit_denom,json=unitDenom,proto3" json:"unit_denom,omitempty"`
	IbcCounterpartyDenom     string   `protobuf:"bytes,15,opt,name=ibc_counterparty_denom,json=ibcCounterpartyDenom,proto3" json:"ibc_counterparty_denom,omitempty"`
	IbcCounterpartyChainId   string   `protobuf:"bytes,16,opt,name=ibc_counterparty_chain_id,json=ibcCounterpartyChainId,proto3" json:"ibc_counterparty_chain_id,omitempty"`
	Authority                string   `protobuf:"bytes,17,opt,name=authority,proto3" json:"authority,omitempty"`
	CommitEnabled            bool     `protobuf:"varint,18,opt,name=commit_enabled,json=commitEnabled,proto3" json:"commit_enabled,omitempty"`
	WithdrawEnabled          bool     `protobuf:"varint,19,opt,name=withdraw_enabled,json=withdrawEnabled,proto3" json:"withdraw_enabled,omitempty"`
}

func (x *Entry) Reset() {
	*x = Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_assetprofile_entry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_elys_assetprofile_entry_proto_rawDescGZIP(), []int{0}
}

func (x *Entry) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *Entry) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *Entry) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *Entry) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Entry) GetIbcChannelId() string {
	if x != nil {
		return x.IbcChannelId
	}
	return ""
}

func (x *Entry) GetIbcCounterpartyChannelId() string {
	if x != nil {
		return x.IbcCounterpartyChannelId
	}
	return ""
}

func (x *Entry) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Entry) GetDisplaySymbol() string {
	if x != nil {
		return x.DisplaySymbol
	}
	return ""
}

func (x *Entry) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Entry) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Entry) GetExternalSymbol() string {
	if x != nil {
		return x.ExternalSymbol
	}
	return ""
}

func (x *Entry) GetTransferLimit() string {
	if x != nil {
		return x.TransferLimit
	}
	return ""
}

func (x *Entry) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Entry) GetUnitDenom() string {
	if x != nil {
		return x.UnitDenom
	}
	return ""
}

func (x *Entry) GetIbcCounterpartyDenom() string {
	if x != nil {
		return x.IbcCounterpartyDenom
	}
	return ""
}

func (x *Entry) GetIbcCounterpartyChainId() string {
	if x != nil {
		return x.IbcCounterpartyChainId
	}
	return ""
}

func (x *Entry) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *Entry) GetCommitEnabled() bool {
	if x != nil {
		return x.CommitEnabled
	}
	return false
}

func (x *Entry) GetWithdrawEnabled() bool {
	if x != nil {
		return x.WithdrawEnabled
	}
	return false
}

var File_elys_assetprofile_entry_proto protoreflect.FileDescriptor

var file_elys_assetprofile_entry_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x11, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x22, 0xc1, 0x05, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x62, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x62, 0x63, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x1b, 0x69, 0x62, 0x63, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69, 0x62,
	0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x62, 0x63, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x62, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x19, 0x69,
	0x62, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x69, 0x62, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0xbc, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x65,
	0x6c, 0x79, 0x73, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x42, 0x0a, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0xa2, 0x02, 0x03, 0x45, 0x41, 0x58, 0xaa, 0x02, 0x11, 0x45, 0x6c, 0x79, 0x73, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0xca, 0x02, 0x11, 0x45,
	0x6c, 0x79, 0x73, 0x5c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0xe2, 0x02, 0x1d, 0x45, 0x6c, 0x79, 0x73, 0x5c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x12, 0x45, 0x6c, 0x79, 0x73, 0x3a, 0x3a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_elys_assetprofile_entry_proto_rawDescOnce sync.Once
	file_elys_assetprofile_entry_proto_rawDescData = file_elys_assetprofile_entry_proto_rawDesc
)

func file_elys_assetprofile_entry_proto_rawDescGZIP() []byte {
	file_elys_assetprofile_entry_proto_rawDescOnce.Do(func() {
		file_elys_assetprofile_entry_proto_rawDescData = protoimpl.X.CompressGZIP(file_elys_assetprofile_entry_proto_rawDescData)
	})
	return file_elys_assetprofile_entry_proto_rawDescData
}

var file_elys_assetprofile_entry_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_elys_assetprofile_entry_proto_goTypes = []interface{}{
	(*Entry)(nil), // 0: elys.assetprofile.Entry
}
var file_elys_assetprofile_entry_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_elys_assetprofile_entry_proto_init() }
func file_elys_assetprofile_entry_proto_init() {
	if File_elys_assetprofile_entry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_elys_assetprofile_entry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elys_assetprofile_entry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_elys_assetprofile_entry_proto_goTypes,
		DependencyIndexes: file_elys_assetprofile_entry_proto_depIdxs,
		MessageInfos:      file_elys_assetprofile_entry_proto_msgTypes,
	}.Build()
	File_elys_assetprofile_entry_proto = out.File
	file_elys_assetprofile_entry_proto_rawDesc = nil
	file_elys_assetprofile_entry_proto_goTypes = nil
	file_elys_assetprofile_entry_proto_depIdxs = nil
}
