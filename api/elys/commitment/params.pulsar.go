// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package commitment

import (
	v1beta1 "cosmossdk.io/api/cosmos/base/v1beta1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_LegacyParams_1_list)(nil)

type _LegacyParams_1_list struct {
	list *[]*VestingInfo
}

func (x *_LegacyParams_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_LegacyParams_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_LegacyParams_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VestingInfo)
	(*x.list)[i] = concreteValue
}

func (x *_LegacyParams_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VestingInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_LegacyParams_1_list) AppendMutable() protoreflect.Value {
	v := new(VestingInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_LegacyParams_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_LegacyParams_1_list) NewElement() protoreflect.Value {
	v := new(VestingInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_LegacyParams_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_LegacyParams_2_list)(nil)

type _LegacyParams_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_LegacyParams_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_LegacyParams_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_LegacyParams_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_LegacyParams_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_LegacyParams_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_LegacyParams_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_LegacyParams_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_LegacyParams_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_LegacyParams                       protoreflect.MessageDescriptor
	fd_LegacyParams_vesting_infos         protoreflect.FieldDescriptor
	fd_LegacyParams_total_committed       protoreflect.FieldDescriptor
	fd_LegacyParams_number_of_commitments protoreflect.FieldDescriptor
	fd_LegacyParams_enable_vest_now       protoreflect.FieldDescriptor
)

func init() {
	file_elys_commitment_params_proto_init()
	md_LegacyParams = File_elys_commitment_params_proto.Messages().ByName("LegacyParams")
	fd_LegacyParams_vesting_infos = md_LegacyParams.Fields().ByName("vesting_infos")
	fd_LegacyParams_total_committed = md_LegacyParams.Fields().ByName("total_committed")
	fd_LegacyParams_number_of_commitments = md_LegacyParams.Fields().ByName("number_of_commitments")
	fd_LegacyParams_enable_vest_now = md_LegacyParams.Fields().ByName("enable_vest_now")
}

var _ protoreflect.Message = (*fastReflection_LegacyParams)(nil)

type fastReflection_LegacyParams LegacyParams

func (x *LegacyParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LegacyParams)(x)
}

func (x *LegacyParams) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_commitment_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LegacyParams_messageType fastReflection_LegacyParams_messageType
var _ protoreflect.MessageType = fastReflection_LegacyParams_messageType{}

type fastReflection_LegacyParams_messageType struct{}

func (x fastReflection_LegacyParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LegacyParams)(nil)
}
func (x fastReflection_LegacyParams_messageType) New() protoreflect.Message {
	return new(fastReflection_LegacyParams)
}
func (x fastReflection_LegacyParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LegacyParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LegacyParams) Descriptor() protoreflect.MessageDescriptor {
	return md_LegacyParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LegacyParams) Type() protoreflect.MessageType {
	return _fastReflection_LegacyParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LegacyParams) New() protoreflect.Message {
	return new(fastReflection_LegacyParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LegacyParams) Interface() protoreflect.ProtoMessage {
	return (*LegacyParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LegacyParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.VestingInfos) != 0 {
		value := protoreflect.ValueOfList(&_LegacyParams_1_list{list: &x.VestingInfos})
		if !f(fd_LegacyParams_vesting_infos, value) {
			return
		}
	}
	if len(x.TotalCommitted) != 0 {
		value := protoreflect.ValueOfList(&_LegacyParams_2_list{list: &x.TotalCommitted})
		if !f(fd_LegacyParams_total_committed, value) {
			return
		}
	}
	if x.NumberOfCommitments != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NumberOfCommitments)
		if !f(fd_LegacyParams_number_of_commitments, value) {
			return
		}
	}
	if x.EnableVestNow != false {
		value := protoreflect.ValueOfBool(x.EnableVestNow)
		if !f(fd_LegacyParams_enable_vest_now, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LegacyParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		return len(x.VestingInfos) != 0
	case "elys.commitment.LegacyParams.total_committed":
		return len(x.TotalCommitted) != 0
	case "elys.commitment.LegacyParams.number_of_commitments":
		return x.NumberOfCommitments != uint64(0)
	case "elys.commitment.LegacyParams.enable_vest_now":
		return x.EnableVestNow != false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		x.VestingInfos = nil
	case "elys.commitment.LegacyParams.total_committed":
		x.TotalCommitted = nil
	case "elys.commitment.LegacyParams.number_of_commitments":
		x.NumberOfCommitments = uint64(0)
	case "elys.commitment.LegacyParams.enable_vest_now":
		x.EnableVestNow = false
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LegacyParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		if len(x.VestingInfos) == 0 {
			return protoreflect.ValueOfList(&_LegacyParams_1_list{})
		}
		listValue := &_LegacyParams_1_list{list: &x.VestingInfos}
		return protoreflect.ValueOfList(listValue)
	case "elys.commitment.LegacyParams.total_committed":
		if len(x.TotalCommitted) == 0 {
			return protoreflect.ValueOfList(&_LegacyParams_2_list{})
		}
		listValue := &_LegacyParams_2_list{list: &x.TotalCommitted}
		return protoreflect.ValueOfList(listValue)
	case "elys.commitment.LegacyParams.number_of_commitments":
		value := x.NumberOfCommitments
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.LegacyParams.enable_vest_now":
		value := x.EnableVestNow
		return protoreflect.ValueOfBool(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		lv := value.List()
		clv := lv.(*_LegacyParams_1_list)
		x.VestingInfos = *clv.list
	case "elys.commitment.LegacyParams.total_committed":
		lv := value.List()
		clv := lv.(*_LegacyParams_2_list)
		x.TotalCommitted = *clv.list
	case "elys.commitment.LegacyParams.number_of_commitments":
		x.NumberOfCommitments = value.Uint()
	case "elys.commitment.LegacyParams.enable_vest_now":
		x.EnableVestNow = value.Bool()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		if x.VestingInfos == nil {
			x.VestingInfos = []*VestingInfo{}
		}
		value := &_LegacyParams_1_list{list: &x.VestingInfos}
		return protoreflect.ValueOfList(value)
	case "elys.commitment.LegacyParams.total_committed":
		if x.TotalCommitted == nil {
			x.TotalCommitted = []*v1beta1.Coin{}
		}
		value := &_LegacyParams_2_list{list: &x.TotalCommitted}
		return protoreflect.ValueOfList(value)
	case "elys.commitment.LegacyParams.number_of_commitments":
		panic(fmt.Errorf("field number_of_commitments of message elys.commitment.LegacyParams is not mutable"))
	case "elys.commitment.LegacyParams.enable_vest_now":
		panic(fmt.Errorf("field enable_vest_now of message elys.commitment.LegacyParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LegacyParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.LegacyParams.vesting_infos":
		list := []*VestingInfo{}
		return protoreflect.ValueOfList(&_LegacyParams_1_list{list: &list})
	case "elys.commitment.LegacyParams.total_committed":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_LegacyParams_2_list{list: &list})
	case "elys.commitment.LegacyParams.number_of_commitments":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.LegacyParams.enable_vest_now":
		return protoreflect.ValueOfBool(false)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.commitment.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LegacyParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.commitment.LegacyParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LegacyParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LegacyParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LegacyParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.VestingInfos) > 0 {
			for _, e := range x.VestingInfos {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TotalCommitted) > 0 {
			for _, e := range x.TotalCommitted {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.NumberOfCommitments != 0 {
			n += 1 + runtime.Sov(uint64(x.NumberOfCommitments))
		}
		if x.EnableVestNow {
			n += 2
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EnableVestNow {
			i--
			if x.EnableVestNow {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if x.NumberOfCommitments != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NumberOfCommitments))
			i--
			dAtA[i] = 0x18
		}
		if len(x.TotalCommitted) > 0 {
			for iNdEx := len(x.TotalCommitted) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TotalCommitted[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.VestingInfos) > 0 {
			for iNdEx := len(x.VestingInfos) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestingInfos[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LegacyParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LegacyParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingInfos", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingInfos = append(x.VestingInfos, &VestingInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingInfos[len(x.VestingInfos)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalCommitted", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalCommitted = append(x.TotalCommitted, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalCommitted[len(x.TotalCommitted)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NumberOfCommitments", wireType)
				}
				x.NumberOfCommitments = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NumberOfCommitments |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableVestNow", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableVestNow = bool(v != 0)
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_Params_1_list)(nil)

type _Params_1_list struct {
	list *[]*VestingInfo
}

func (x *_Params_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Params_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Params_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VestingInfo)
	(*x.list)[i] = concreteValue
}

func (x *_Params_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*VestingInfo)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Params_1_list) AppendMutable() protoreflect.Value {
	v := new(VestingInfo)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Params_1_list) NewElement() protoreflect.Value {
	v := new(VestingInfo)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_1_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_Params_2_list)(nil)

type _Params_2_list struct {
	list *[]*v1beta1.Coin
}

func (x *_Params_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_Params_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_Params_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	(*x.list)[i] = concreteValue
}

func (x *_Params_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*v1beta1.Coin)
	*x.list = append(*x.list, concreteValue)
}

func (x *_Params_2_list) AppendMutable() protoreflect.Value {
	v := new(v1beta1.Coin)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_Params_2_list) NewElement() protoreflect.Value {
	v := new(v1beta1.Coin)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_Params_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_Params                           protoreflect.MessageDescriptor
	fd_Params_vesting_infos             protoreflect.FieldDescriptor
	fd_Params_total_committed           protoreflect.FieldDescriptor
	fd_Params_number_of_commitments     protoreflect.FieldDescriptor
	fd_Params_enable_vest_now           protoreflect.FieldDescriptor
	fd_Params_start_atom_stakers_height protoreflect.FieldDescriptor
	fd_Params_end_atom_stakers_height   protoreflect.FieldDescriptor
	fd_Params_start_cadets_height       protoreflect.FieldDescriptor
	fd_Params_end_cadets_height         protoreflect.FieldDescriptor
	fd_Params_start_nft_holders_height  protoreflect.FieldDescriptor
	fd_Params_end_nft_holders_height    protoreflect.FieldDescriptor
	fd_Params_start_governors_height    protoreflect.FieldDescriptor
	fd_Params_end_governors_height      protoreflect.FieldDescriptor
)

func init() {
	file_elys_commitment_params_proto_init()
	md_Params = File_elys_commitment_params_proto.Messages().ByName("Params")
	fd_Params_vesting_infos = md_Params.Fields().ByName("vesting_infos")
	fd_Params_total_committed = md_Params.Fields().ByName("total_committed")
	fd_Params_number_of_commitments = md_Params.Fields().ByName("number_of_commitments")
	fd_Params_enable_vest_now = md_Params.Fields().ByName("enable_vest_now")
	fd_Params_start_atom_stakers_height = md_Params.Fields().ByName("start_atom_stakers_height")
	fd_Params_end_atom_stakers_height = md_Params.Fields().ByName("end_atom_stakers_height")
	fd_Params_start_cadets_height = md_Params.Fields().ByName("start_cadets_height")
	fd_Params_end_cadets_height = md_Params.Fields().ByName("end_cadets_height")
	fd_Params_start_nft_holders_height = md_Params.Fields().ByName("start_nft_holders_height")
	fd_Params_end_nft_holders_height = md_Params.Fields().ByName("end_nft_holders_height")
	fd_Params_start_governors_height = md_Params.Fields().ByName("start_governors_height")
	fd_Params_end_governors_height = md_Params.Fields().ByName("end_governors_height")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_commitment_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.VestingInfos) != 0 {
		value := protoreflect.ValueOfList(&_Params_1_list{list: &x.VestingInfos})
		if !f(fd_Params_vesting_infos, value) {
			return
		}
	}
	if len(x.TotalCommitted) != 0 {
		value := protoreflect.ValueOfList(&_Params_2_list{list: &x.TotalCommitted})
		if !f(fd_Params_total_committed, value) {
			return
		}
	}
	if x.NumberOfCommitments != uint64(0) {
		value := protoreflect.ValueOfUint64(x.NumberOfCommitments)
		if !f(fd_Params_number_of_commitments, value) {
			return
		}
	}
	if x.EnableVestNow != false {
		value := protoreflect.ValueOfBool(x.EnableVestNow)
		if !f(fd_Params_enable_vest_now, value) {
			return
		}
	}
	if x.StartAtomStakersHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartAtomStakersHeight)
		if !f(fd_Params_start_atom_stakers_height, value) {
			return
		}
	}
	if x.EndAtomStakersHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndAtomStakersHeight)
		if !f(fd_Params_end_atom_stakers_height, value) {
			return
		}
	}
	if x.StartCadetsHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartCadetsHeight)
		if !f(fd_Params_start_cadets_height, value) {
			return
		}
	}
	if x.EndCadetsHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndCadetsHeight)
		if !f(fd_Params_end_cadets_height, value) {
			return
		}
	}
	if x.StartNftHoldersHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartNftHoldersHeight)
		if !f(fd_Params_start_nft_holders_height, value) {
			return
		}
	}
	if x.EndNftHoldersHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndNftHoldersHeight)
		if !f(fd_Params_end_nft_holders_height, value) {
			return
		}
	}
	if x.StartGovernorsHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartGovernorsHeight)
		if !f(fd_Params_start_governors_height, value) {
			return
		}
	}
	if x.EndGovernorsHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndGovernorsHeight)
		if !f(fd_Params_end_governors_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.commitment.Params.vesting_infos":
		return len(x.VestingInfos) != 0
	case "elys.commitment.Params.total_committed":
		return len(x.TotalCommitted) != 0
	case "elys.commitment.Params.number_of_commitments":
		return x.NumberOfCommitments != uint64(0)
	case "elys.commitment.Params.enable_vest_now":
		return x.EnableVestNow != false
	case "elys.commitment.Params.start_atom_stakers_height":
		return x.StartAtomStakersHeight != uint64(0)
	case "elys.commitment.Params.end_atom_stakers_height":
		return x.EndAtomStakersHeight != uint64(0)
	case "elys.commitment.Params.start_cadets_height":
		return x.StartCadetsHeight != uint64(0)
	case "elys.commitment.Params.end_cadets_height":
		return x.EndCadetsHeight != uint64(0)
	case "elys.commitment.Params.start_nft_holders_height":
		return x.StartNftHoldersHeight != uint64(0)
	case "elys.commitment.Params.end_nft_holders_height":
		return x.EndNftHoldersHeight != uint64(0)
	case "elys.commitment.Params.start_governors_height":
		return x.StartGovernorsHeight != uint64(0)
	case "elys.commitment.Params.end_governors_height":
		return x.EndGovernorsHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.commitment.Params.vesting_infos":
		x.VestingInfos = nil
	case "elys.commitment.Params.total_committed":
		x.TotalCommitted = nil
	case "elys.commitment.Params.number_of_commitments":
		x.NumberOfCommitments = uint64(0)
	case "elys.commitment.Params.enable_vest_now":
		x.EnableVestNow = false
	case "elys.commitment.Params.start_atom_stakers_height":
		x.StartAtomStakersHeight = uint64(0)
	case "elys.commitment.Params.end_atom_stakers_height":
		x.EndAtomStakersHeight = uint64(0)
	case "elys.commitment.Params.start_cadets_height":
		x.StartCadetsHeight = uint64(0)
	case "elys.commitment.Params.end_cadets_height":
		x.EndCadetsHeight = uint64(0)
	case "elys.commitment.Params.start_nft_holders_height":
		x.StartNftHoldersHeight = uint64(0)
	case "elys.commitment.Params.end_nft_holders_height":
		x.EndNftHoldersHeight = uint64(0)
	case "elys.commitment.Params.start_governors_height":
		x.StartGovernorsHeight = uint64(0)
	case "elys.commitment.Params.end_governors_height":
		x.EndGovernorsHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.commitment.Params.vesting_infos":
		if len(x.VestingInfos) == 0 {
			return protoreflect.ValueOfList(&_Params_1_list{})
		}
		listValue := &_Params_1_list{list: &x.VestingInfos}
		return protoreflect.ValueOfList(listValue)
	case "elys.commitment.Params.total_committed":
		if len(x.TotalCommitted) == 0 {
			return protoreflect.ValueOfList(&_Params_2_list{})
		}
		listValue := &_Params_2_list{list: &x.TotalCommitted}
		return protoreflect.ValueOfList(listValue)
	case "elys.commitment.Params.number_of_commitments":
		value := x.NumberOfCommitments
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.enable_vest_now":
		value := x.EnableVestNow
		return protoreflect.ValueOfBool(value)
	case "elys.commitment.Params.start_atom_stakers_height":
		value := x.StartAtomStakersHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.end_atom_stakers_height":
		value := x.EndAtomStakersHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.start_cadets_height":
		value := x.StartCadetsHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.end_cadets_height":
		value := x.EndCadetsHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.start_nft_holders_height":
		value := x.StartNftHoldersHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.end_nft_holders_height":
		value := x.EndNftHoldersHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.start_governors_height":
		value := x.StartGovernorsHeight
		return protoreflect.ValueOfUint64(value)
	case "elys.commitment.Params.end_governors_height":
		value := x.EndGovernorsHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.commitment.Params.vesting_infos":
		lv := value.List()
		clv := lv.(*_Params_1_list)
		x.VestingInfos = *clv.list
	case "elys.commitment.Params.total_committed":
		lv := value.List()
		clv := lv.(*_Params_2_list)
		x.TotalCommitted = *clv.list
	case "elys.commitment.Params.number_of_commitments":
		x.NumberOfCommitments = value.Uint()
	case "elys.commitment.Params.enable_vest_now":
		x.EnableVestNow = value.Bool()
	case "elys.commitment.Params.start_atom_stakers_height":
		x.StartAtomStakersHeight = value.Uint()
	case "elys.commitment.Params.end_atom_stakers_height":
		x.EndAtomStakersHeight = value.Uint()
	case "elys.commitment.Params.start_cadets_height":
		x.StartCadetsHeight = value.Uint()
	case "elys.commitment.Params.end_cadets_height":
		x.EndCadetsHeight = value.Uint()
	case "elys.commitment.Params.start_nft_holders_height":
		x.StartNftHoldersHeight = value.Uint()
	case "elys.commitment.Params.end_nft_holders_height":
		x.EndNftHoldersHeight = value.Uint()
	case "elys.commitment.Params.start_governors_height":
		x.StartGovernorsHeight = value.Uint()
	case "elys.commitment.Params.end_governors_height":
		x.EndGovernorsHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.Params.vesting_infos":
		if x.VestingInfos == nil {
			x.VestingInfos = []*VestingInfo{}
		}
		value := &_Params_1_list{list: &x.VestingInfos}
		return protoreflect.ValueOfList(value)
	case "elys.commitment.Params.total_committed":
		if x.TotalCommitted == nil {
			x.TotalCommitted = []*v1beta1.Coin{}
		}
		value := &_Params_2_list{list: &x.TotalCommitted}
		return protoreflect.ValueOfList(value)
	case "elys.commitment.Params.number_of_commitments":
		panic(fmt.Errorf("field number_of_commitments of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.enable_vest_now":
		panic(fmt.Errorf("field enable_vest_now of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.start_atom_stakers_height":
		panic(fmt.Errorf("field start_atom_stakers_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.end_atom_stakers_height":
		panic(fmt.Errorf("field end_atom_stakers_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.start_cadets_height":
		panic(fmt.Errorf("field start_cadets_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.end_cadets_height":
		panic(fmt.Errorf("field end_cadets_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.start_nft_holders_height":
		panic(fmt.Errorf("field start_nft_holders_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.end_nft_holders_height":
		panic(fmt.Errorf("field end_nft_holders_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.start_governors_height":
		panic(fmt.Errorf("field start_governors_height of message elys.commitment.Params is not mutable"))
	case "elys.commitment.Params.end_governors_height":
		panic(fmt.Errorf("field end_governors_height of message elys.commitment.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.Params.vesting_infos":
		list := []*VestingInfo{}
		return protoreflect.ValueOfList(&_Params_1_list{list: &list})
	case "elys.commitment.Params.total_committed":
		list := []*v1beta1.Coin{}
		return protoreflect.ValueOfList(&_Params_2_list{list: &list})
	case "elys.commitment.Params.number_of_commitments":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.enable_vest_now":
		return protoreflect.ValueOfBool(false)
	case "elys.commitment.Params.start_atom_stakers_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.end_atom_stakers_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.start_cadets_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.end_cadets_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.start_nft_holders_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.end_nft_holders_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.start_governors_height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "elys.commitment.Params.end_governors_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.Params"))
		}
		panic(fmt.Errorf("message elys.commitment.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.commitment.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.VestingInfos) > 0 {
			for _, e := range x.VestingInfos {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.TotalCommitted) > 0 {
			for _, e := range x.TotalCommitted {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.NumberOfCommitments != 0 {
			n += 1 + runtime.Sov(uint64(x.NumberOfCommitments))
		}
		if x.EnableVestNow {
			n += 2
		}
		if x.StartAtomStakersHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.StartAtomStakersHeight))
		}
		if x.EndAtomStakersHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EndAtomStakersHeight))
		}
		if x.StartCadetsHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.StartCadetsHeight))
		}
		if x.EndCadetsHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EndCadetsHeight))
		}
		if x.StartNftHoldersHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.StartNftHoldersHeight))
		}
		if x.EndNftHoldersHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EndNftHoldersHeight))
		}
		if x.StartGovernorsHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.StartGovernorsHeight))
		}
		if x.EndGovernorsHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.EndGovernorsHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.EndGovernorsHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndGovernorsHeight))
			i--
			dAtA[i] = 0x60
		}
		if x.StartGovernorsHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartGovernorsHeight))
			i--
			dAtA[i] = 0x58
		}
		if x.EndNftHoldersHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndNftHoldersHeight))
			i--
			dAtA[i] = 0x50
		}
		if x.StartNftHoldersHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartNftHoldersHeight))
			i--
			dAtA[i] = 0x48
		}
		if x.EndCadetsHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndCadetsHeight))
			i--
			dAtA[i] = 0x40
		}
		if x.StartCadetsHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartCadetsHeight))
			i--
			dAtA[i] = 0x38
		}
		if x.EndAtomStakersHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndAtomStakersHeight))
			i--
			dAtA[i] = 0x30
		}
		if x.StartAtomStakersHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartAtomStakersHeight))
			i--
			dAtA[i] = 0x28
		}
		if x.EnableVestNow {
			i--
			if x.EnableVestNow {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x20
		}
		if x.NumberOfCommitments != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NumberOfCommitments))
			i--
			dAtA[i] = 0x18
		}
		if len(x.TotalCommitted) > 0 {
			for iNdEx := len(x.TotalCommitted) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.TotalCommitted[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.VestingInfos) > 0 {
			for iNdEx := len(x.VestingInfos) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.VestingInfos[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingInfos", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingInfos = append(x.VestingInfos, &VestingInfo{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.VestingInfos[len(x.VestingInfos)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TotalCommitted", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TotalCommitted = append(x.TotalCommitted, &v1beta1.Coin{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TotalCommitted[len(x.TotalCommitted)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NumberOfCommitments", wireType)
				}
				x.NumberOfCommitments = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NumberOfCommitments |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EnableVestNow", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.EnableVestNow = bool(v != 0)
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartAtomStakersHeight", wireType)
				}
				x.StartAtomStakersHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartAtomStakersHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndAtomStakersHeight", wireType)
				}
				x.EndAtomStakersHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndAtomStakersHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartCadetsHeight", wireType)
				}
				x.StartCadetsHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartCadetsHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndCadetsHeight", wireType)
				}
				x.EndCadetsHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndCadetsHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartNftHoldersHeight", wireType)
				}
				x.StartNftHoldersHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartNftHoldersHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndNftHoldersHeight", wireType)
				}
				x.EndNftHoldersHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndNftHoldersHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartGovernorsHeight", wireType)
				}
				x.StartGovernorsHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartGovernorsHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndGovernorsHeight", wireType)
				}
				x.EndGovernorsHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndGovernorsHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_VestingInfo                  protoreflect.MessageDescriptor
	fd_VestingInfo_base_denom       protoreflect.FieldDescriptor
	fd_VestingInfo_vesting_denom    protoreflect.FieldDescriptor
	fd_VestingInfo_num_blocks       protoreflect.FieldDescriptor
	fd_VestingInfo_vest_now_factor  protoreflect.FieldDescriptor
	fd_VestingInfo_num_max_vestings protoreflect.FieldDescriptor
)

func init() {
	file_elys_commitment_params_proto_init()
	md_VestingInfo = File_elys_commitment_params_proto.Messages().ByName("VestingInfo")
	fd_VestingInfo_base_denom = md_VestingInfo.Fields().ByName("base_denom")
	fd_VestingInfo_vesting_denom = md_VestingInfo.Fields().ByName("vesting_denom")
	fd_VestingInfo_num_blocks = md_VestingInfo.Fields().ByName("num_blocks")
	fd_VestingInfo_vest_now_factor = md_VestingInfo.Fields().ByName("vest_now_factor")
	fd_VestingInfo_num_max_vestings = md_VestingInfo.Fields().ByName("num_max_vestings")
}

var _ protoreflect.Message = (*fastReflection_VestingInfo)(nil)

type fastReflection_VestingInfo VestingInfo

func (x *VestingInfo) ProtoReflect() protoreflect.Message {
	return (*fastReflection_VestingInfo)(x)
}

func (x *VestingInfo) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_commitment_params_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_VestingInfo_messageType fastReflection_VestingInfo_messageType
var _ protoreflect.MessageType = fastReflection_VestingInfo_messageType{}

type fastReflection_VestingInfo_messageType struct{}

func (x fastReflection_VestingInfo_messageType) Zero() protoreflect.Message {
	return (*fastReflection_VestingInfo)(nil)
}
func (x fastReflection_VestingInfo_messageType) New() protoreflect.Message {
	return new(fastReflection_VestingInfo)
}
func (x fastReflection_VestingInfo_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_VestingInfo
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_VestingInfo) Descriptor() protoreflect.MessageDescriptor {
	return md_VestingInfo
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_VestingInfo) Type() protoreflect.MessageType {
	return _fastReflection_VestingInfo_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_VestingInfo) New() protoreflect.Message {
	return new(fastReflection_VestingInfo)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_VestingInfo) Interface() protoreflect.ProtoMessage {
	return (*VestingInfo)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_VestingInfo) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_VestingInfo_base_denom, value) {
			return
		}
	}
	if x.VestingDenom != "" {
		value := protoreflect.ValueOfString(x.VestingDenom)
		if !f(fd_VestingInfo_vesting_denom, value) {
			return
		}
	}
	if x.NumBlocks != int64(0) {
		value := protoreflect.ValueOfInt64(x.NumBlocks)
		if !f(fd_VestingInfo_num_blocks, value) {
			return
		}
	}
	if x.VestNowFactor != "" {
		value := protoreflect.ValueOfString(x.VestNowFactor)
		if !f(fd_VestingInfo_vest_now_factor, value) {
			return
		}
	}
	if x.NumMaxVestings != int64(0) {
		value := protoreflect.ValueOfInt64(x.NumMaxVestings)
		if !f(fd_VestingInfo_num_max_vestings, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_VestingInfo) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		return x.BaseDenom != ""
	case "elys.commitment.VestingInfo.vesting_denom":
		return x.VestingDenom != ""
	case "elys.commitment.VestingInfo.num_blocks":
		return x.NumBlocks != int64(0)
	case "elys.commitment.VestingInfo.vest_now_factor":
		return x.VestNowFactor != ""
	case "elys.commitment.VestingInfo.num_max_vestings":
		return x.NumMaxVestings != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VestingInfo) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		x.BaseDenom = ""
	case "elys.commitment.VestingInfo.vesting_denom":
		x.VestingDenom = ""
	case "elys.commitment.VestingInfo.num_blocks":
		x.NumBlocks = int64(0)
	case "elys.commitment.VestingInfo.vest_now_factor":
		x.VestNowFactor = ""
	case "elys.commitment.VestingInfo.num_max_vestings":
		x.NumMaxVestings = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_VestingInfo) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "elys.commitment.VestingInfo.vesting_denom":
		value := x.VestingDenom
		return protoreflect.ValueOfString(value)
	case "elys.commitment.VestingInfo.num_blocks":
		value := x.NumBlocks
		return protoreflect.ValueOfInt64(value)
	case "elys.commitment.VestingInfo.vest_now_factor":
		value := x.VestNowFactor
		return protoreflect.ValueOfString(value)
	case "elys.commitment.VestingInfo.num_max_vestings":
		value := x.NumMaxVestings
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VestingInfo) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "elys.commitment.VestingInfo.vesting_denom":
		x.VestingDenom = value.Interface().(string)
	case "elys.commitment.VestingInfo.num_blocks":
		x.NumBlocks = value.Int()
	case "elys.commitment.VestingInfo.vest_now_factor":
		x.VestNowFactor = value.Interface().(string)
	case "elys.commitment.VestingInfo.num_max_vestings":
		x.NumMaxVestings = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VestingInfo) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		panic(fmt.Errorf("field base_denom of message elys.commitment.VestingInfo is not mutable"))
	case "elys.commitment.VestingInfo.vesting_denom":
		panic(fmt.Errorf("field vesting_denom of message elys.commitment.VestingInfo is not mutable"))
	case "elys.commitment.VestingInfo.num_blocks":
		panic(fmt.Errorf("field num_blocks of message elys.commitment.VestingInfo is not mutable"))
	case "elys.commitment.VestingInfo.vest_now_factor":
		panic(fmt.Errorf("field vest_now_factor of message elys.commitment.VestingInfo is not mutable"))
	case "elys.commitment.VestingInfo.num_max_vestings":
		panic(fmt.Errorf("field num_max_vestings of message elys.commitment.VestingInfo is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_VestingInfo) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.commitment.VestingInfo.base_denom":
		return protoreflect.ValueOfString("")
	case "elys.commitment.VestingInfo.vesting_denom":
		return protoreflect.ValueOfString("")
	case "elys.commitment.VestingInfo.num_blocks":
		return protoreflect.ValueOfInt64(int64(0))
	case "elys.commitment.VestingInfo.vest_now_factor":
		return protoreflect.ValueOfString("")
	case "elys.commitment.VestingInfo.num_max_vestings":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.commitment.VestingInfo"))
		}
		panic(fmt.Errorf("message elys.commitment.VestingInfo does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_VestingInfo) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.commitment.VestingInfo", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_VestingInfo) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_VestingInfo) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_VestingInfo) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_VestingInfo) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*VestingInfo)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.VestingDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NumBlocks != 0 {
			n += 1 + runtime.Sov(uint64(x.NumBlocks))
		}
		l = len(x.VestNowFactor)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.NumMaxVestings != 0 {
			n += 1 + runtime.Sov(uint64(x.NumMaxVestings))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*VestingInfo)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.NumMaxVestings != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NumMaxVestings))
			i--
			dAtA[i] = 0x28
		}
		if len(x.VestNowFactor) > 0 {
			i -= len(x.VestNowFactor)
			copy(dAtA[i:], x.VestNowFactor)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VestNowFactor)))
			i--
			dAtA[i] = 0x22
		}
		if x.NumBlocks != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.NumBlocks))
			i--
			dAtA[i] = 0x18
		}
		if len(x.VestingDenom) > 0 {
			i -= len(x.VestingDenom)
			copy(dAtA[i:], x.VestingDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VestingDenom)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*VestingInfo)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VestingInfo: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: VestingInfo: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestingDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestingDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NumBlocks", wireType)
				}
				x.NumBlocks = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NumBlocks |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VestNowFactor", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VestNowFactor = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NumMaxVestings", wireType)
				}
				x.NumMaxVestings = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.NumMaxVestings |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: elys/commitment/params.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EarnType int32

const (
	EarnType_ALL_PROGRAM       EarnType = 0
	EarnType_USDC_PROGRAM      EarnType = 1
	EarnType_ELYS_PROGRAM      EarnType = 2
	EarnType_EDEN_PROGRAM      EarnType = 3
	EarnType_EDENB_PROGRAM     EarnType = 4
	EarnType_LP_MINING_PROGRAM EarnType = 5
)

// Enum value maps for EarnType.
var (
	EarnType_name = map[int32]string{
		0: "ALL_PROGRAM",
		1: "USDC_PROGRAM",
		2: "ELYS_PROGRAM",
		3: "EDEN_PROGRAM",
		4: "EDENB_PROGRAM",
		5: "LP_MINING_PROGRAM",
	}
	EarnType_value = map[string]int32{
		"ALL_PROGRAM":       0,
		"USDC_PROGRAM":      1,
		"ELYS_PROGRAM":      2,
		"EDEN_PROGRAM":      3,
		"EDENB_PROGRAM":     4,
		"LP_MINING_PROGRAM": 5,
	}
)

func (x EarnType) Enum() *EarnType {
	p := new(EarnType)
	*p = x
	return p
}

func (x EarnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EarnType) Descriptor() protoreflect.EnumDescriptor {
	return file_elys_commitment_params_proto_enumTypes[0].Descriptor()
}

func (EarnType) Type() protoreflect.EnumType {
	return &file_elys_commitment_params_proto_enumTypes[0]
}

func (x EarnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EarnType.Descriptor instead.
func (EarnType) EnumDescriptor() ([]byte, []int) {
	return file_elys_commitment_params_proto_rawDescGZIP(), []int{0}
}

type LegacyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingInfos        []*VestingInfo  `protobuf:"bytes,1,rep,name=vesting_infos,json=vestingInfos,proto3" json:"vesting_infos,omitempty"`
	TotalCommitted      []*v1beta1.Coin `protobuf:"bytes,2,rep,name=total_committed,json=totalCommitted,proto3" json:"total_committed,omitempty"`
	NumberOfCommitments uint64          `protobuf:"varint,3,opt,name=number_of_commitments,json=numberOfCommitments,proto3" json:"number_of_commitments,omitempty"`
	EnableVestNow       bool            `protobuf:"varint,4,opt,name=enable_vest_now,json=enableVestNow,proto3" json:"enable_vest_now,omitempty"`
}

func (x *LegacyParams) Reset() {
	*x = LegacyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_commitment_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyParams) ProtoMessage() {}

// Deprecated: Use LegacyParams.ProtoReflect.Descriptor instead.
func (*LegacyParams) Descriptor() ([]byte, []int) {
	return file_elys_commitment_params_proto_rawDescGZIP(), []int{0}
}

func (x *LegacyParams) GetVestingInfos() []*VestingInfo {
	if x != nil {
		return x.VestingInfos
	}
	return nil
}

func (x *LegacyParams) GetTotalCommitted() []*v1beta1.Coin {
	if x != nil {
		return x.TotalCommitted
	}
	return nil
}

func (x *LegacyParams) GetNumberOfCommitments() uint64 {
	if x != nil {
		return x.NumberOfCommitments
	}
	return 0
}

func (x *LegacyParams) GetEnableVestNow() bool {
	if x != nil {
		return x.EnableVestNow
	}
	return false
}

type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VestingInfos           []*VestingInfo  `protobuf:"bytes,1,rep,name=vesting_infos,json=vestingInfos,proto3" json:"vesting_infos,omitempty"`
	TotalCommitted         []*v1beta1.Coin `protobuf:"bytes,2,rep,name=total_committed,json=totalCommitted,proto3" json:"total_committed,omitempty"`
	NumberOfCommitments    uint64          `protobuf:"varint,3,opt,name=number_of_commitments,json=numberOfCommitments,proto3" json:"number_of_commitments,omitempty"`
	EnableVestNow          bool            `protobuf:"varint,4,opt,name=enable_vest_now,json=enableVestNow,proto3" json:"enable_vest_now,omitempty"`
	StartAtomStakersHeight uint64          `protobuf:"varint,5,opt,name=start_atom_stakers_height,json=startAtomStakersHeight,proto3" json:"start_atom_stakers_height,omitempty"`
	EndAtomStakersHeight   uint64          `protobuf:"varint,6,opt,name=end_atom_stakers_height,json=endAtomStakersHeight,proto3" json:"end_atom_stakers_height,omitempty"`
	StartCadetsHeight      uint64          `protobuf:"varint,7,opt,name=start_cadets_height,json=startCadetsHeight,proto3" json:"start_cadets_height,omitempty"`
	EndCadetsHeight        uint64          `protobuf:"varint,8,opt,name=end_cadets_height,json=endCadetsHeight,proto3" json:"end_cadets_height,omitempty"`
	StartNftHoldersHeight  uint64          `protobuf:"varint,9,opt,name=start_nft_holders_height,json=startNftHoldersHeight,proto3" json:"start_nft_holders_height,omitempty"`
	EndNftHoldersHeight    uint64          `protobuf:"varint,10,opt,name=end_nft_holders_height,json=endNftHoldersHeight,proto3" json:"end_nft_holders_height,omitempty"`
	StartGovernorsHeight   uint64          `protobuf:"varint,11,opt,name=start_governors_height,json=startGovernorsHeight,proto3" json:"start_governors_height,omitempty"`
	EndGovernorsHeight     uint64          `protobuf:"varint,12,opt,name=end_governors_height,json=endGovernorsHeight,proto3" json:"end_governors_height,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_commitment_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_elys_commitment_params_proto_rawDescGZIP(), []int{1}
}

func (x *Params) GetVestingInfos() []*VestingInfo {
	if x != nil {
		return x.VestingInfos
	}
	return nil
}

func (x *Params) GetTotalCommitted() []*v1beta1.Coin {
	if x != nil {
		return x.TotalCommitted
	}
	return nil
}

func (x *Params) GetNumberOfCommitments() uint64 {
	if x != nil {
		return x.NumberOfCommitments
	}
	return 0
}

func (x *Params) GetEnableVestNow() bool {
	if x != nil {
		return x.EnableVestNow
	}
	return false
}

func (x *Params) GetStartAtomStakersHeight() uint64 {
	if x != nil {
		return x.StartAtomStakersHeight
	}
	return 0
}

func (x *Params) GetEndAtomStakersHeight() uint64 {
	if x != nil {
		return x.EndAtomStakersHeight
	}
	return 0
}

func (x *Params) GetStartCadetsHeight() uint64 {
	if x != nil {
		return x.StartCadetsHeight
	}
	return 0
}

func (x *Params) GetEndCadetsHeight() uint64 {
	if x != nil {
		return x.EndCadetsHeight
	}
	return 0
}

func (x *Params) GetStartNftHoldersHeight() uint64 {
	if x != nil {
		return x.StartNftHoldersHeight
	}
	return 0
}

func (x *Params) GetEndNftHoldersHeight() uint64 {
	if x != nil {
		return x.EndNftHoldersHeight
	}
	return 0
}

func (x *Params) GetStartGovernorsHeight() uint64 {
	if x != nil {
		return x.StartGovernorsHeight
	}
	return 0
}

func (x *Params) GetEndGovernorsHeight() uint64 {
	if x != nil {
		return x.EndGovernorsHeight
	}
	return 0
}

type VestingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseDenom      string `protobuf:"bytes,1,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	VestingDenom   string `protobuf:"bytes,2,opt,name=vesting_denom,json=vestingDenom,proto3" json:"vesting_denom,omitempty"`
	NumBlocks      int64  `protobuf:"varint,3,opt,name=num_blocks,json=numBlocks,proto3" json:"num_blocks,omitempty"`
	VestNowFactor  string `protobuf:"bytes,4,opt,name=vest_now_factor,json=vestNowFactor,proto3" json:"vest_now_factor,omitempty"`
	NumMaxVestings int64  `protobuf:"varint,5,opt,name=num_max_vestings,json=numMaxVestings,proto3" json:"num_max_vestings,omitempty"`
}

func (x *VestingInfo) Reset() {
	*x = VestingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_commitment_params_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VestingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VestingInfo) ProtoMessage() {}

// Deprecated: Use VestingInfo.ProtoReflect.Descriptor instead.
func (*VestingInfo) Descriptor() ([]byte, []int) {
	return file_elys_commitment_params_proto_rawDescGZIP(), []int{2}
}

func (x *VestingInfo) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *VestingInfo) GetVestingDenom() string {
	if x != nil {
		return x.VestingDenom
	}
	return ""
}

func (x *VestingInfo) GetNumBlocks() int64 {
	if x != nil {
		return x.NumBlocks
	}
	return 0
}

func (x *VestingInfo) GetVestNowFactor() string {
	if x != nil {
		return x.VestNowFactor
	}
	return ""
}

func (x *VestingInfo) GetNumMaxVestings() int64 {
	if x != nil {
		return x.NumMaxVestings
	}
	return 0
}

var File_elys_commitment_params_proto protoreflect.FileDescriptor

var file_elys_commitment_params_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x65, 0x6c, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x1a,
	0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa9, 0x02, 0x0a, 0x0c, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x47, 0x0a, 0x0d, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x0c, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x74, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30,
	0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76,
	0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x77, 0x22, 0xc7, 0x05, 0x0a,
	0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x76, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x0c, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x12, 0x74, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x6f, 0x69, 0x6e, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf, 0x1f, 0x28, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x73, 0x74, 0x4e,
	0x6f, 0x77, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x6f, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x6f, 0x6d,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x35, 0x0a,
	0x17, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x65, 0x6e, 0x64, 0x41, 0x74, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x61,
	0x64, 0x65, 0x74, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x43, 0x61, 0x64, 0x65, 0x74, 0x73, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x64, 0x65,
	0x74, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x64, 0x65, 0x74, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x37, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x66, 0x74, 0x48, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x6e, 0x64,
	0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x65, 0x6e, 0x64, 0x4e, 0x66,
	0x74, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72,
	0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x6f, 0x76, 0x65,
	0x72, 0x6e, 0x6f, 0x72, 0x73, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75,
	0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x76, 0x65, 0x73,
	0x74, 0x5f, 0x6e, 0x6f, 0x77, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x2b, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e,
	0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x52,
	0x0d, 0x76, 0x65, 0x73, 0x74, 0x4e, 0x6f, 0x77, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x76, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4d, 0x61, 0x78,
	0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2a, 0x7b, 0x0a, 0x08, 0x45, 0x61, 0x72, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x41, 0x4d, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x44, 0x43, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x4c, 0x59, 0x53, 0x5f,
	0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x44, 0x45,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x45,
	0x44, 0x45, 0x4e, 0x42, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x4c, 0x50, 0x5f, 0x4d, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x41, 0x4d, 0x10, 0x05, 0x42, 0xb1, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x6c,
	0x79, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65,
	0x6c, 0x79, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0xa2, 0x02,
	0x03, 0x45, 0x43, 0x58, 0xaa, 0x02, 0x0f, 0x45, 0x6c, 0x79, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0xca, 0x02, 0x0f, 0x45, 0x6c, 0x79, 0x73, 0x5c, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0xe2, 0x02, 0x1b, 0x45, 0x6c, 0x79, 0x73, 0x5c,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x45, 0x6c, 0x79, 0x73, 0x3a, 0x3a, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_elys_commitment_params_proto_rawDescOnce sync.Once
	file_elys_commitment_params_proto_rawDescData = file_elys_commitment_params_proto_rawDesc
)

func file_elys_commitment_params_proto_rawDescGZIP() []byte {
	file_elys_commitment_params_proto_rawDescOnce.Do(func() {
		file_elys_commitment_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_elys_commitment_params_proto_rawDescData)
	})
	return file_elys_commitment_params_proto_rawDescData
}

var file_elys_commitment_params_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_elys_commitment_params_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_elys_commitment_params_proto_goTypes = []interface{}{
	(EarnType)(0),        // 0: elys.commitment.EarnType
	(*LegacyParams)(nil), // 1: elys.commitment.LegacyParams
	(*Params)(nil),       // 2: elys.commitment.Params
	(*VestingInfo)(nil),  // 3: elys.commitment.VestingInfo
	(*v1beta1.Coin)(nil), // 4: cosmos.base.v1beta1.Coin
}
var file_elys_commitment_params_proto_depIdxs = []int32{
	3, // 0: elys.commitment.LegacyParams.vesting_infos:type_name -> elys.commitment.VestingInfo
	4, // 1: elys.commitment.LegacyParams.total_committed:type_name -> cosmos.base.v1beta1.Coin
	3, // 2: elys.commitment.Params.vesting_infos:type_name -> elys.commitment.VestingInfo
	4, // 3: elys.commitment.Params.total_committed:type_name -> cosmos.base.v1beta1.Coin
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_elys_commitment_params_proto_init() }
func file_elys_commitment_params_proto_init() {
	if File_elys_commitment_params_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_elys_commitment_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elys_commitment_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elys_commitment_params_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VestingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elys_commitment_params_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_elys_commitment_params_proto_goTypes,
		DependencyIndexes: file_elys_commitment_params_proto_depIdxs,
		EnumInfos:         file_elys_commitment_params_proto_enumTypes,
		MessageInfos:      file_elys_commitment_params_proto_msgTypes,
	}.Build()
	File_elys_commitment_params_proto = out.File
	file_elys_commitment_params_proto_rawDesc = nil
	file_elys_commitment_params_proto_goTypes = nil
	file_elys_commitment_params_proto_depIdxs = nil
}
