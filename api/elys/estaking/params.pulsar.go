// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package estaking

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_LegacyParams                             protoreflect.MessageDescriptor
	fd_LegacyParams_stake_incentives            protoreflect.FieldDescriptor
	fd_LegacyParams_eden_commit_val             protoreflect.FieldDescriptor
	fd_LegacyParams_edenb_commit_val            protoreflect.FieldDescriptor
	fd_LegacyParams_max_eden_reward_apr_stakers protoreflect.FieldDescriptor
	fd_LegacyParams_eden_boost_apr              protoreflect.FieldDescriptor
	fd_LegacyParams_dex_rewards_stakers         protoreflect.FieldDescriptor
)

func init() {
	file_elys_estaking_params_proto_init()
	md_LegacyParams = File_elys_estaking_params_proto.Messages().ByName("LegacyParams")
	fd_LegacyParams_stake_incentives = md_LegacyParams.Fields().ByName("stake_incentives")
	fd_LegacyParams_eden_commit_val = md_LegacyParams.Fields().ByName("eden_commit_val")
	fd_LegacyParams_edenb_commit_val = md_LegacyParams.Fields().ByName("edenb_commit_val")
	fd_LegacyParams_max_eden_reward_apr_stakers = md_LegacyParams.Fields().ByName("max_eden_reward_apr_stakers")
	fd_LegacyParams_eden_boost_apr = md_LegacyParams.Fields().ByName("eden_boost_apr")
	fd_LegacyParams_dex_rewards_stakers = md_LegacyParams.Fields().ByName("dex_rewards_stakers")
}

var _ protoreflect.Message = (*fastReflection_LegacyParams)(nil)

type fastReflection_LegacyParams LegacyParams

func (x *LegacyParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_LegacyParams)(x)
}

func (x *LegacyParams) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_estaking_params_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_LegacyParams_messageType fastReflection_LegacyParams_messageType
var _ protoreflect.MessageType = fastReflection_LegacyParams_messageType{}

type fastReflection_LegacyParams_messageType struct{}

func (x fastReflection_LegacyParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_LegacyParams)(nil)
}
func (x fastReflection_LegacyParams_messageType) New() protoreflect.Message {
	return new(fastReflection_LegacyParams)
}
func (x fastReflection_LegacyParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_LegacyParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_LegacyParams) Descriptor() protoreflect.MessageDescriptor {
	return md_LegacyParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_LegacyParams) Type() protoreflect.MessageType {
	return _fastReflection_LegacyParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_LegacyParams) New() protoreflect.Message {
	return new(fastReflection_LegacyParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_LegacyParams) Interface() protoreflect.ProtoMessage {
	return (*LegacyParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_LegacyParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StakeIncentives != nil {
		value := protoreflect.ValueOfMessage(x.StakeIncentives.ProtoReflect())
		if !f(fd_LegacyParams_stake_incentives, value) {
			return
		}
	}
	if x.EdenCommitVal != "" {
		value := protoreflect.ValueOfString(x.EdenCommitVal)
		if !f(fd_LegacyParams_eden_commit_val, value) {
			return
		}
	}
	if x.EdenbCommitVal != "" {
		value := protoreflect.ValueOfString(x.EdenbCommitVal)
		if !f(fd_LegacyParams_edenb_commit_val, value) {
			return
		}
	}
	if x.MaxEdenRewardAprStakers != "" {
		value := protoreflect.ValueOfString(x.MaxEdenRewardAprStakers)
		if !f(fd_LegacyParams_max_eden_reward_apr_stakers, value) {
			return
		}
	}
	if x.EdenBoostApr != "" {
		value := protoreflect.ValueOfString(x.EdenBoostApr)
		if !f(fd_LegacyParams_eden_boost_apr, value) {
			return
		}
	}
	if x.DexRewardsStakers != nil {
		value := protoreflect.ValueOfMessage(x.DexRewardsStakers.ProtoReflect())
		if !f(fd_LegacyParams_dex_rewards_stakers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_LegacyParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		return x.StakeIncentives != nil
	case "elys.estaking.LegacyParams.eden_commit_val":
		return x.EdenCommitVal != ""
	case "elys.estaking.LegacyParams.edenb_commit_val":
		return x.EdenbCommitVal != ""
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		return x.MaxEdenRewardAprStakers != ""
	case "elys.estaking.LegacyParams.eden_boost_apr":
		return x.EdenBoostApr != ""
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		return x.DexRewardsStakers != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		x.StakeIncentives = nil
	case "elys.estaking.LegacyParams.eden_commit_val":
		x.EdenCommitVal = ""
	case "elys.estaking.LegacyParams.edenb_commit_val":
		x.EdenbCommitVal = ""
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		x.MaxEdenRewardAprStakers = ""
	case "elys.estaking.LegacyParams.eden_boost_apr":
		x.EdenBoostApr = ""
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		x.DexRewardsStakers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_LegacyParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		value := x.StakeIncentives
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "elys.estaking.LegacyParams.eden_commit_val":
		value := x.EdenCommitVal
		return protoreflect.ValueOfString(value)
	case "elys.estaking.LegacyParams.edenb_commit_val":
		value := x.EdenbCommitVal
		return protoreflect.ValueOfString(value)
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		value := x.MaxEdenRewardAprStakers
		return protoreflect.ValueOfString(value)
	case "elys.estaking.LegacyParams.eden_boost_apr":
		value := x.EdenBoostApr
		return protoreflect.ValueOfString(value)
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		value := x.DexRewardsStakers
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		x.StakeIncentives = value.Message().Interface().(*IncentiveInfo)
	case "elys.estaking.LegacyParams.eden_commit_val":
		x.EdenCommitVal = value.Interface().(string)
	case "elys.estaking.LegacyParams.edenb_commit_val":
		x.EdenbCommitVal = value.Interface().(string)
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		x.MaxEdenRewardAprStakers = value.Interface().(string)
	case "elys.estaking.LegacyParams.eden_boost_apr":
		x.EdenBoostApr = value.Interface().(string)
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		x.DexRewardsStakers = value.Message().Interface().(*DexRewardsTracker)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		if x.StakeIncentives == nil {
			x.StakeIncentives = new(IncentiveInfo)
		}
		return protoreflect.ValueOfMessage(x.StakeIncentives.ProtoReflect())
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		if x.DexRewardsStakers == nil {
			x.DexRewardsStakers = new(DexRewardsTracker)
		}
		return protoreflect.ValueOfMessage(x.DexRewardsStakers.ProtoReflect())
	case "elys.estaking.LegacyParams.eden_commit_val":
		panic(fmt.Errorf("field eden_commit_val of message elys.estaking.LegacyParams is not mutable"))
	case "elys.estaking.LegacyParams.edenb_commit_val":
		panic(fmt.Errorf("field edenb_commit_val of message elys.estaking.LegacyParams is not mutable"))
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		panic(fmt.Errorf("field max_eden_reward_apr_stakers of message elys.estaking.LegacyParams is not mutable"))
	case "elys.estaking.LegacyParams.eden_boost_apr":
		panic(fmt.Errorf("field eden_boost_apr of message elys.estaking.LegacyParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_LegacyParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.estaking.LegacyParams.stake_incentives":
		m := new(IncentiveInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "elys.estaking.LegacyParams.eden_commit_val":
		return protoreflect.ValueOfString("")
	case "elys.estaking.LegacyParams.edenb_commit_val":
		return protoreflect.ValueOfString("")
	case "elys.estaking.LegacyParams.max_eden_reward_apr_stakers":
		return protoreflect.ValueOfString("")
	case "elys.estaking.LegacyParams.eden_boost_apr":
		return protoreflect.ValueOfString("")
	case "elys.estaking.LegacyParams.dex_rewards_stakers":
		m := new(DexRewardsTracker)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.LegacyParams"))
		}
		panic(fmt.Errorf("message elys.estaking.LegacyParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_LegacyParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.estaking.LegacyParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_LegacyParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_LegacyParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_LegacyParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_LegacyParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.StakeIncentives != nil {
			l = options.Size(x.StakeIncentives)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenCommitVal)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenbCommitVal)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxEdenRewardAprStakers)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenBoostApr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DexRewardsStakers != nil {
			l = options.Size(x.DexRewardsStakers)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.DexRewardsStakers != nil {
			encoded, err := options.Marshal(x.DexRewardsStakers)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EdenBoostApr) > 0 {
			i -= len(x.EdenBoostApr)
			copy(dAtA[i:], x.EdenBoostApr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenBoostApr)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.MaxEdenRewardAprStakers) > 0 {
			i -= len(x.MaxEdenRewardAprStakers)
			copy(dAtA[i:], x.MaxEdenRewardAprStakers)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxEdenRewardAprStakers)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EdenbCommitVal) > 0 {
			i -= len(x.EdenbCommitVal)
			copy(dAtA[i:], x.EdenbCommitVal)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenbCommitVal)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.EdenCommitVal) > 0 {
			i -= len(x.EdenCommitVal)
			copy(dAtA[i:], x.EdenCommitVal)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenCommitVal)))
			i--
			dAtA[i] = 0x12
		}
		if x.StakeIncentives != nil {
			encoded, err := options.Marshal(x.StakeIncentives)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*LegacyParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LegacyParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: LegacyParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeIncentives", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StakeIncentives == nil {
					x.StakeIncentives = &IncentiveInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeIncentives); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenCommitVal", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenCommitVal = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenbCommitVal", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenbCommitVal = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxEdenRewardAprStakers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxEdenRewardAprStakers = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenBoostApr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenBoostApr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DexRewardsStakers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.DexRewardsStakers == nil {
					x.DexRewardsStakers = &DexRewardsTracker{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DexRewardsStakers); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Params                                   protoreflect.MessageDescriptor
	fd_Params_stake_incentives                  protoreflect.FieldDescriptor
	fd_Params_eden_commit_val                   protoreflect.FieldDescriptor
	fd_Params_edenb_commit_val                  protoreflect.FieldDescriptor
	fd_Params_max_eden_reward_apr_stakers       protoreflect.FieldDescriptor
	fd_Params_eden_boost_apr                    protoreflect.FieldDescriptor
	fd_Params_provider_vesting_epoch_identifier protoreflect.FieldDescriptor
	fd_Params_provider_staking_rewards_portion  protoreflect.FieldDescriptor
)

func init() {
	file_elys_estaking_params_proto_init()
	md_Params = File_elys_estaking_params_proto.Messages().ByName("Params")
	fd_Params_stake_incentives = md_Params.Fields().ByName("stake_incentives")
	fd_Params_eden_commit_val = md_Params.Fields().ByName("eden_commit_val")
	fd_Params_edenb_commit_val = md_Params.Fields().ByName("edenb_commit_val")
	fd_Params_max_eden_reward_apr_stakers = md_Params.Fields().ByName("max_eden_reward_apr_stakers")
	fd_Params_eden_boost_apr = md_Params.Fields().ByName("eden_boost_apr")
	fd_Params_provider_vesting_epoch_identifier = md_Params.Fields().ByName("provider_vesting_epoch_identifier")
	fd_Params_provider_staking_rewards_portion = md_Params.Fields().ByName("provider_staking_rewards_portion")
}

var _ protoreflect.Message = (*fastReflection_Params)(nil)

type fastReflection_Params Params

func (x *Params) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Params)(x)
}

func (x *Params) slowProtoReflect() protoreflect.Message {
	mi := &file_elys_estaking_params_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Params_messageType fastReflection_Params_messageType
var _ protoreflect.MessageType = fastReflection_Params_messageType{}

type fastReflection_Params_messageType struct{}

func (x fastReflection_Params_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Params)(nil)
}
func (x fastReflection_Params_messageType) New() protoreflect.Message {
	return new(fastReflection_Params)
}
func (x fastReflection_Params_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Params) Descriptor() protoreflect.MessageDescriptor {
	return md_Params
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Params) Type() protoreflect.MessageType {
	return _fastReflection_Params_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Params) New() protoreflect.Message {
	return new(fastReflection_Params)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Params) Interface() protoreflect.ProtoMessage {
	return (*Params)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Params) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.StakeIncentives != nil {
		value := protoreflect.ValueOfMessage(x.StakeIncentives.ProtoReflect())
		if !f(fd_Params_stake_incentives, value) {
			return
		}
	}
	if x.EdenCommitVal != "" {
		value := protoreflect.ValueOfString(x.EdenCommitVal)
		if !f(fd_Params_eden_commit_val, value) {
			return
		}
	}
	if x.EdenbCommitVal != "" {
		value := protoreflect.ValueOfString(x.EdenbCommitVal)
		if !f(fd_Params_edenb_commit_val, value) {
			return
		}
	}
	if x.MaxEdenRewardAprStakers != "" {
		value := protoreflect.ValueOfString(x.MaxEdenRewardAprStakers)
		if !f(fd_Params_max_eden_reward_apr_stakers, value) {
			return
		}
	}
	if x.EdenBoostApr != "" {
		value := protoreflect.ValueOfString(x.EdenBoostApr)
		if !f(fd_Params_eden_boost_apr, value) {
			return
		}
	}
	if x.ProviderVestingEpochIdentifier != "" {
		value := protoreflect.ValueOfString(x.ProviderVestingEpochIdentifier)
		if !f(fd_Params_provider_vesting_epoch_identifier, value) {
			return
		}
	}
	if x.ProviderStakingRewardsPortion != "" {
		value := protoreflect.ValueOfString(x.ProviderStakingRewardsPortion)
		if !f(fd_Params_provider_staking_rewards_portion, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Params) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "elys.estaking.Params.stake_incentives":
		return x.StakeIncentives != nil
	case "elys.estaking.Params.eden_commit_val":
		return x.EdenCommitVal != ""
	case "elys.estaking.Params.edenb_commit_val":
		return x.EdenbCommitVal != ""
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		return x.MaxEdenRewardAprStakers != ""
	case "elys.estaking.Params.eden_boost_apr":
		return x.EdenBoostApr != ""
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		return x.ProviderVestingEpochIdentifier != ""
	case "elys.estaking.Params.provider_staking_rewards_portion":
		return x.ProviderStakingRewardsPortion != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "elys.estaking.Params.stake_incentives":
		x.StakeIncentives = nil
	case "elys.estaking.Params.eden_commit_val":
		x.EdenCommitVal = ""
	case "elys.estaking.Params.edenb_commit_val":
		x.EdenbCommitVal = ""
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		x.MaxEdenRewardAprStakers = ""
	case "elys.estaking.Params.eden_boost_apr":
		x.EdenBoostApr = ""
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		x.ProviderVestingEpochIdentifier = ""
	case "elys.estaking.Params.provider_staking_rewards_portion":
		x.ProviderStakingRewardsPortion = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Params) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "elys.estaking.Params.stake_incentives":
		value := x.StakeIncentives
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "elys.estaking.Params.eden_commit_val":
		value := x.EdenCommitVal
		return protoreflect.ValueOfString(value)
	case "elys.estaking.Params.edenb_commit_val":
		value := x.EdenbCommitVal
		return protoreflect.ValueOfString(value)
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		value := x.MaxEdenRewardAprStakers
		return protoreflect.ValueOfString(value)
	case "elys.estaking.Params.eden_boost_apr":
		value := x.EdenBoostApr
		return protoreflect.ValueOfString(value)
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		value := x.ProviderVestingEpochIdentifier
		return protoreflect.ValueOfString(value)
	case "elys.estaking.Params.provider_staking_rewards_portion":
		value := x.ProviderStakingRewardsPortion
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "elys.estaking.Params.stake_incentives":
		x.StakeIncentives = value.Message().Interface().(*IncentiveInfo)
	case "elys.estaking.Params.eden_commit_val":
		x.EdenCommitVal = value.Interface().(string)
	case "elys.estaking.Params.edenb_commit_val":
		x.EdenbCommitVal = value.Interface().(string)
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		x.MaxEdenRewardAprStakers = value.Interface().(string)
	case "elys.estaking.Params.eden_boost_apr":
		x.EdenBoostApr = value.Interface().(string)
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		x.ProviderVestingEpochIdentifier = value.Interface().(string)
	case "elys.estaking.Params.provider_staking_rewards_portion":
		x.ProviderStakingRewardsPortion = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.estaking.Params.stake_incentives":
		if x.StakeIncentives == nil {
			x.StakeIncentives = new(IncentiveInfo)
		}
		return protoreflect.ValueOfMessage(x.StakeIncentives.ProtoReflect())
	case "elys.estaking.Params.eden_commit_val":
		panic(fmt.Errorf("field eden_commit_val of message elys.estaking.Params is not mutable"))
	case "elys.estaking.Params.edenb_commit_val":
		panic(fmt.Errorf("field edenb_commit_val of message elys.estaking.Params is not mutable"))
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		panic(fmt.Errorf("field max_eden_reward_apr_stakers of message elys.estaking.Params is not mutable"))
	case "elys.estaking.Params.eden_boost_apr":
		panic(fmt.Errorf("field eden_boost_apr of message elys.estaking.Params is not mutable"))
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		panic(fmt.Errorf("field provider_vesting_epoch_identifier of message elys.estaking.Params is not mutable"))
	case "elys.estaking.Params.provider_staking_rewards_portion":
		panic(fmt.Errorf("field provider_staking_rewards_portion of message elys.estaking.Params is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Params) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "elys.estaking.Params.stake_incentives":
		m := new(IncentiveInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "elys.estaking.Params.eden_commit_val":
		return protoreflect.ValueOfString("")
	case "elys.estaking.Params.edenb_commit_val":
		return protoreflect.ValueOfString("")
	case "elys.estaking.Params.max_eden_reward_apr_stakers":
		return protoreflect.ValueOfString("")
	case "elys.estaking.Params.eden_boost_apr":
		return protoreflect.ValueOfString("")
	case "elys.estaking.Params.provider_vesting_epoch_identifier":
		return protoreflect.ValueOfString("")
	case "elys.estaking.Params.provider_staking_rewards_portion":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: elys.estaking.Params"))
		}
		panic(fmt.Errorf("message elys.estaking.Params does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Params) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in elys.estaking.Params", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Params) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Params) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Params) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Params) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.StakeIncentives != nil {
			l = options.Size(x.StakeIncentives)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenCommitVal)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenbCommitVal)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MaxEdenRewardAprStakers)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.EdenBoostApr)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProviderVestingEpochIdentifier)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ProviderStakingRewardsPortion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ProviderStakingRewardsPortion) > 0 {
			i -= len(x.ProviderStakingRewardsPortion)
			copy(dAtA[i:], x.ProviderStakingRewardsPortion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProviderStakingRewardsPortion)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.ProviderVestingEpochIdentifier) > 0 {
			i -= len(x.ProviderVestingEpochIdentifier)
			copy(dAtA[i:], x.ProviderVestingEpochIdentifier)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProviderVestingEpochIdentifier)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.EdenBoostApr) > 0 {
			i -= len(x.EdenBoostApr)
			copy(dAtA[i:], x.EdenBoostApr)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenBoostApr)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.MaxEdenRewardAprStakers) > 0 {
			i -= len(x.MaxEdenRewardAprStakers)
			copy(dAtA[i:], x.MaxEdenRewardAprStakers)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MaxEdenRewardAprStakers)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.EdenbCommitVal) > 0 {
			i -= len(x.EdenbCommitVal)
			copy(dAtA[i:], x.EdenbCommitVal)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenbCommitVal)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.EdenCommitVal) > 0 {
			i -= len(x.EdenCommitVal)
			copy(dAtA[i:], x.EdenCommitVal)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.EdenCommitVal)))
			i--
			dAtA[i] = 0x12
		}
		if x.StakeIncentives != nil {
			encoded, err := options.Marshal(x.StakeIncentives)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Params)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StakeIncentives", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.StakeIncentives == nil {
					x.StakeIncentives = &IncentiveInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.StakeIncentives); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenCommitVal", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenCommitVal = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenbCommitVal", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenbCommitVal = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxEdenRewardAprStakers", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MaxEdenRewardAprStakers = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EdenBoostApr", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.EdenBoostApr = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProviderVestingEpochIdentifier", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProviderVestingEpochIdentifier = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProviderStakingRewardsPortion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProviderStakingRewardsPortion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: elys/estaking/params.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LegacyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeIncentives *IncentiveInfo `protobuf:"bytes,1,opt,name=stake_incentives,json=stakeIncentives,proto3" json:"stake_incentives,omitempty"`
	EdenCommitVal   string         `protobuf:"bytes,2,opt,name=eden_commit_val,json=edenCommitVal,proto3" json:"eden_commit_val,omitempty"`
	EdenbCommitVal  string         `protobuf:"bytes,3,opt,name=edenb_commit_val,json=edenbCommitVal,proto3" json:"edenb_commit_val,omitempty"`
	// Maximum eden reward apr for stakers - [0 - 0.3]
	MaxEdenRewardAprStakers string `protobuf:"bytes,4,opt,name=max_eden_reward_apr_stakers,json=maxEdenRewardAprStakers,proto3" json:"max_eden_reward_apr_stakers,omitempty"`
	EdenBoostApr            string `protobuf:"bytes,5,opt,name=eden_boost_apr,json=edenBoostApr,proto3" json:"eden_boost_apr,omitempty"`
	// Tracking dex rewards given to stakers
	DexRewardsStakers *DexRewardsTracker `protobuf:"bytes,6,opt,name=dex_rewards_stakers,json=dexRewardsStakers,proto3" json:"dex_rewards_stakers,omitempty"`
}

func (x *LegacyParams) Reset() {
	*x = LegacyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_estaking_params_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyParams) ProtoMessage() {}

// Deprecated: Use LegacyParams.ProtoReflect.Descriptor instead.
func (*LegacyParams) Descriptor() ([]byte, []int) {
	return file_elys_estaking_params_proto_rawDescGZIP(), []int{0}
}

func (x *LegacyParams) GetStakeIncentives() *IncentiveInfo {
	if x != nil {
		return x.StakeIncentives
	}
	return nil
}

func (x *LegacyParams) GetEdenCommitVal() string {
	if x != nil {
		return x.EdenCommitVal
	}
	return ""
}

func (x *LegacyParams) GetEdenbCommitVal() string {
	if x != nil {
		return x.EdenbCommitVal
	}
	return ""
}

func (x *LegacyParams) GetMaxEdenRewardAprStakers() string {
	if x != nil {
		return x.MaxEdenRewardAprStakers
	}
	return ""
}

func (x *LegacyParams) GetEdenBoostApr() string {
	if x != nil {
		return x.EdenBoostApr
	}
	return ""
}

func (x *LegacyParams) GetDexRewardsStakers() *DexRewardsTracker {
	if x != nil {
		return x.DexRewardsStakers
	}
	return nil
}

// Params defines the parameters for the module.
type Params struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakeIncentives *IncentiveInfo `protobuf:"bytes,1,opt,name=stake_incentives,json=stakeIncentives,proto3" json:"stake_incentives,omitempty"`
	EdenCommitVal   string         `protobuf:"bytes,2,opt,name=eden_commit_val,json=edenCommitVal,proto3" json:"eden_commit_val,omitempty"`
	EdenbCommitVal  string         `protobuf:"bytes,3,opt,name=edenb_commit_val,json=edenbCommitVal,proto3" json:"edenb_commit_val,omitempty"`
	// Maximum eden reward apr for stakers - [0 - 0.3]
	MaxEdenRewardAprStakers        string `protobuf:"bytes,4,opt,name=max_eden_reward_apr_stakers,json=maxEdenRewardAprStakers,proto3" json:"max_eden_reward_apr_stakers,omitempty"`
	EdenBoostApr                   string `protobuf:"bytes,5,opt,name=eden_boost_apr,json=edenBoostApr,proto3" json:"eden_boost_apr,omitempty"`
	ProviderVestingEpochIdentifier string `protobuf:"bytes,6,opt,name=provider_vesting_epoch_identifier,json=providerVestingEpochIdentifier,proto3" json:"provider_vesting_epoch_identifier,omitempty"`
	ProviderStakingRewardsPortion  string `protobuf:"bytes,7,opt,name=provider_staking_rewards_portion,json=providerStakingRewardsPortion,proto3" json:"provider_staking_rewards_portion,omitempty"`
}

func (x *Params) Reset() {
	*x = Params{}
	if protoimpl.UnsafeEnabled {
		mi := &file_elys_estaking_params_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Params) ProtoMessage() {}

// Deprecated: Use Params.ProtoReflect.Descriptor instead.
func (*Params) Descriptor() ([]byte, []int) {
	return file_elys_estaking_params_proto_rawDescGZIP(), []int{1}
}

func (x *Params) GetStakeIncentives() *IncentiveInfo {
	if x != nil {
		return x.StakeIncentives
	}
	return nil
}

func (x *Params) GetEdenCommitVal() string {
	if x != nil {
		return x.EdenCommitVal
	}
	return ""
}

func (x *Params) GetEdenbCommitVal() string {
	if x != nil {
		return x.EdenbCommitVal
	}
	return ""
}

func (x *Params) GetMaxEdenRewardAprStakers() string {
	if x != nil {
		return x.MaxEdenRewardAprStakers
	}
	return ""
}

func (x *Params) GetEdenBoostApr() string {
	if x != nil {
		return x.EdenBoostApr
	}
	return ""
}

func (x *Params) GetProviderVestingEpochIdentifier() string {
	if x != nil {
		return x.ProviderVestingEpochIdentifier
	}
	return ""
}

func (x *Params) GetProviderStakingRewardsPortion() string {
	if x != nil {
		return x.ProviderStakingRewardsPortion
	}
	return ""
}

var File_elys_estaking_params_proto protoreflect.FileDescriptor

var file_elys_estaking_params_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x6c,
	0x79, 0x73, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2f, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x64, 0x65, 0x78, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x03, 0x0a, 0x0c, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x69,
	0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x64, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x64, 0x65, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x64, 0x65, 0x6e, 0x62, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x64, 0x65, 0x6e, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c,
	0x12, 0x6f, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x64, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x5f, 0x61, 0x70, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68,
	0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x17, 0x6d, 0x61, 0x78, 0x45, 0x64, 0x65,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x70, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x73, 0x12, 0x57, 0x0a, 0x0e, 0x65, 0x64, 0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f,
	0x61, 0x70, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda,
	0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4,
	0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x0c, 0x65, 0x64,
	0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x41, 0x70, 0x72, 0x12, 0x56, 0x0a, 0x13, 0x64, 0x65,
	0x78, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x65,
	0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52,
	0x11, 0x64, 0x65, 0x78, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x73, 0x22, 0xb4, 0x04, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x47, 0x0a,
	0x10, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x65,
	0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x64, 0x65, 0x6e, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x64, 0x65, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x10, 0x65, 0x64, 0x65, 0x6e, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x64, 0x65, 0x6e, 0x62, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x6f, 0x0a, 0x1b, 0x6d, 0x61, 0x78, 0x5f,
	0x65, 0x64, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x70, 0x72, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8,
	0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b,
	0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44,
	0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x52, 0x17, 0x6d, 0x61, 0x78, 0x45, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x70, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x57, 0x0a, 0x0e, 0x65, 0x64, 0x65,
	0x6e, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x44, 0x65, 0x63, 0x52, 0x0c, 0x65, 0x64, 0x65, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x41,
	0x70, 0x72, 0x12, 0x49, 0x0a, 0x21, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x76,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x56, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x7a, 0x0a,
	0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f,
	0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61,
	0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xd2, 0xb4, 0x2d, 0x0a,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x63, 0x52, 0x1d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0xa5, 0x01, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x65, 0x6c, 0x79, 0x73, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x42,
	0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x6c, 0x79, 0x73, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0xa2, 0x02,
	0x03, 0x45, 0x45, 0x58, 0xaa, 0x02, 0x0d, 0x45, 0x6c, 0x79, 0x73, 0x2e, 0x45, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0xca, 0x02, 0x0d, 0x45, 0x6c, 0x79, 0x73, 0x5c, 0x45, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0xe2, 0x02, 0x19, 0x45, 0x6c, 0x79, 0x73, 0x5c, 0x45, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0xea, 0x02, 0x0e, 0x45, 0x6c, 0x79, 0x73, 0x3a, 0x3a, 0x45, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_elys_estaking_params_proto_rawDescOnce sync.Once
	file_elys_estaking_params_proto_rawDescData = file_elys_estaking_params_proto_rawDesc
)

func file_elys_estaking_params_proto_rawDescGZIP() []byte {
	file_elys_estaking_params_proto_rawDescOnce.Do(func() {
		file_elys_estaking_params_proto_rawDescData = protoimpl.X.CompressGZIP(file_elys_estaking_params_proto_rawDescData)
	})
	return file_elys_estaking_params_proto_rawDescData
}

var file_elys_estaking_params_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_elys_estaking_params_proto_goTypes = []interface{}{
	(*LegacyParams)(nil),      // 0: elys.estaking.LegacyParams
	(*Params)(nil),            // 1: elys.estaking.Params
	(*IncentiveInfo)(nil),     // 2: elys.estaking.IncentiveInfo
	(*DexRewardsTracker)(nil), // 3: elys.estaking.DexRewardsTracker
}
var file_elys_estaking_params_proto_depIdxs = []int32{
	2, // 0: elys.estaking.LegacyParams.stake_incentives:type_name -> elys.estaking.IncentiveInfo
	3, // 1: elys.estaking.LegacyParams.dex_rewards_stakers:type_name -> elys.estaking.DexRewardsTracker
	2, // 2: elys.estaking.Params.stake_incentives:type_name -> elys.estaking.IncentiveInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_elys_estaking_params_proto_init() }
func file_elys_estaking_params_proto_init() {
	if File_elys_estaking_params_proto != nil {
		return
	}
	file_elys_estaking_incentive_proto_init()
	file_elys_estaking_dex_rewards_tracker_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_elys_estaking_params_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_elys_estaking_params_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Params); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_elys_estaking_params_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_elys_estaking_params_proto_goTypes,
		DependencyIndexes: file_elys_estaking_params_proto_depIdxs,
		MessageInfos:      file_elys_estaking_params_proto_msgTypes,
	}.Build()
	File_elys_estaking_params_proto = out.File
	file_elys_estaking_params_proto_rawDesc = nil
	file_elys_estaking_params_proto_goTypes = nil
	file_elys_estaking_params_proto_depIdxs = nil
}
