name: Test Software Upgrade

on:
  pull_request:

jobs:
  software-upgrade-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.21"

      - name: Retrieve latest snapshot
        run: |
          DOWNLOAD_URL=https://snapshots-testnet.stake-town.com/elys/elystestnet-1_latest.tar.lz4
          SNAPSHOT_PATH=/tmp/snapshot.tar.lz4
          curl -L $DOWNLOAD_URL -o $SNAPSHOT_PATH
          echo "SNAPSHOT_PATH=$SNAPSHOT_PATH" >> $GITHUB_ENV

      - name: Retrieve latest binary
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          DOWNLOAD_URL=https://github.com/elys-network/elys/releases/download/$LATEST_TAG/elysd-$LATEST_TAG-linux-amd64
          OLD_BINARY_PATH=/tmp/elysd-$LATEST_TAG
          curl -L $DOWNLOAD_URL -o $OLD_BINARY_PATH && chmod +x $OLD_BINARY_PATH
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          echo "OLD_BINARY_PATH=$OLD_BINARY_PATH" >> $GITHUB_ENV

          # TODO: retrieve upgrade-assure and upload-snapshot binaries

      - name: Create git tag
        run: git tag v999.999.999

      - name: Build new binaries
        run: |
          # build new elys binary
          make build
          NEW_BINARY_PATH=./build/elysd
          echo "NEW_BINARY_PATH=$NEW_BINARY_PATH" >> $GITHUB_ENV

          # build new upgrade assure binary
          make build-upgrade-assure
          NEW_UPGRADE_ASSURE_BINARY_PATH=./build/new-upgrade-assure
          mv ./build/upgrade-assure $NEW_UPGRADE_ASSURE_BINARY_PATH
          echo "NEW_UPGRADE_ASSURE_BINARY_PATH=$NEW_UPGRADE_ASSURE_BINARY_PATH" >> $GITHUB_ENV

          # build upload snapshot binary
          make build-upload-snapshot
          UPLOAD_SNAPSHOT_BINARY_PATH=./build/upload-snapshot
          echo "UPLOAD_SNAPSHOT_BINARY_PATH=$UPLOAD_SNAPSHOT_BINARY_PATH" >> $GITHUB_ENV

      # TODO: to remove when upgrade-assure binary is available in previous release
      - name: Copy upgrade assure folder
        run: |
          cp -a $NEW_UPGRADE_ASSURE_BINARY_PATH ./cmd/upgrade-assure-skip

      - name: Check out latest tag
        run: git checkout $LATEST_TAG

      # TODO: to remove when upgrade-assure binary is available in previous release
      - name: Copy old upgrade assure types.go file
        run: |
          cp -a ./scripts/upgrade-assure/types.go ./cmd/upgrade-assure-skip/types.go

      # TODO: to remove when upgrade-assure binary is available in previous release
      - name: Build old binaries
        run: |
          # build old upgrade assure binary
          go build -o build ./cmd/upgrade-assure-skip
          OLD_UPGRADE_ASSURE_BINARY_PATH=./build/old-upgrade-assure
          mv ./build/upgrade-assure $OLD_UPGRADE_ASSURE_BINARY_PATH
          echo "OLD_UPGRADE_ASSURE_BINARY_PATH=$OLD_UPGRADE_ASSURE_BINARY_PATH" >> $GITHUB_ENV

      - name: Chain snapshot and export
        run: |
          $OLD_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-chain-init \
            --skip-node-start

      - name: Chain initialization
        run: |
          $OLD_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-snapshot \
            --skip-node-start

      - name: Check out new branch
        run: git checkout ${{ github.head_ref }}

      - name: Create second validator
        run: |
          $NEW_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-snapshot \
            --skip-chain-init \
            --skip-prepare-validator-data \
            --skip-submit-proposal \
            --skip-upgrade-to-new-binary

      - name: Prepare second validator data
        run: |
          $NEW_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-snapshot \
            --skip-chain-init \
            --skip-create-validator \
            --skip-submit-proposal \
            --skip-upgrade-to-new-binary

      - name: Submit new proposal
        run: |
          $NEW_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-snapshot \
            --skip-chain-init \
            --skip-create-validator \
            --skip-prepare-validator-data \
            --skip-upgrade-to-new-binary

      - name: Upgrade to new binary
        run: |
          $NEW_UPGRADE_ASSURE_BINARY_PATH $SNAPSHOT_PATH $OLD_BINARY_PATH $NEW_BINARY_PATH \
            --skip-snapshot \
            --skip-chain-init \
            --skip-create-validator \
            --skip-prepare-validator-data \
            --skip-submit-proposal

      - name: Create new snapshot file
        run: |
          NEW_SNAPSHOT_PATH=/tmp/elys-snapshot-${{ github.head_ref }}.tar.lz4
          echo "NEW_SNAPSHOT_PATH=$NEW_SNAPSHOT_PATH" >> $GITHUB_ENV
          tar -cf - ~/.elys | lz4 -z - > $NEW_SNAPSHOT_PATH

      - name: Upload snapshot
        run: |
          $UPLOAD_SNAPSHOT_BINARY_PATH $NEW_SNAPSHOT_PATH
