// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: elys/tradeshield/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreatePendingSpotOrder struct {
	OrderType        SpotOrderType `protobuf:"varint,1,opt,name=order_type,json=orderType,proto3,enum=elys.tradeshield.SpotOrderType" json:"order_type,omitempty"`
	OrderPrice       *OrderPrice   `protobuf:"bytes,3,opt,name=order_price,json=orderPrice,proto3" json:"order_price,omitempty"`
	OrderAmount      *types.Coin   `protobuf:"bytes,4,opt,name=order_amount,json=orderAmount,proto3" json:"order_amount,omitempty"`
	OwnerAddress     string        `protobuf:"bytes,5,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	OrderTargetDenom string        `protobuf:"bytes,6,opt,name=order_target_denom,json=orderTargetDenom,proto3" json:"order_target_denom,omitempty"`
	Status           Status        `protobuf:"varint,7,opt,name=status,proto3,enum=elys.tradeshield.Status" json:"status,omitempty"`
	Date             *Date         `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
}

func (m *MsgCreatePendingSpotOrder) Reset()         { *m = MsgCreatePendingSpotOrder{} }
func (m *MsgCreatePendingSpotOrder) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePendingSpotOrder) ProtoMessage()    {}
func (*MsgCreatePendingSpotOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{0}
}
func (m *MsgCreatePendingSpotOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePendingSpotOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePendingSpotOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePendingSpotOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePendingSpotOrder.Merge(m, src)
}
func (m *MsgCreatePendingSpotOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePendingSpotOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePendingSpotOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePendingSpotOrder proto.InternalMessageInfo

func (m *MsgCreatePendingSpotOrder) GetOrderType() SpotOrderType {
	if m != nil {
		return m.OrderType
	}
	return SpotOrderType_STOPLOSS
}

func (m *MsgCreatePendingSpotOrder) GetOrderPrice() *OrderPrice {
	if m != nil {
		return m.OrderPrice
	}
	return nil
}

func (m *MsgCreatePendingSpotOrder) GetOrderAmount() *types.Coin {
	if m != nil {
		return m.OrderAmount
	}
	return nil
}

func (m *MsgCreatePendingSpotOrder) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgCreatePendingSpotOrder) GetOrderTargetDenom() string {
	if m != nil {
		return m.OrderTargetDenom
	}
	return ""
}

func (m *MsgCreatePendingSpotOrder) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_PENDING
}

func (m *MsgCreatePendingSpotOrder) GetDate() *Date {
	if m != nil {
		return m.Date
	}
	return nil
}

type MsgCreatePendingSpotOrderResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePendingSpotOrderResponse) Reset()         { *m = MsgCreatePendingSpotOrderResponse{} }
func (m *MsgCreatePendingSpotOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePendingSpotOrderResponse) ProtoMessage()    {}
func (*MsgCreatePendingSpotOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{1}
}
func (m *MsgCreatePendingSpotOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePendingSpotOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePendingSpotOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePendingSpotOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePendingSpotOrderResponse.Merge(m, src)
}
func (m *MsgCreatePendingSpotOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePendingSpotOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePendingSpotOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePendingSpotOrderResponse proto.InternalMessageInfo

func (m *MsgCreatePendingSpotOrderResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePendingSpotOrder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Order   string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (m *MsgUpdatePendingSpotOrder) Reset()         { *m = MsgUpdatePendingSpotOrder{} }
func (m *MsgUpdatePendingSpotOrder) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePendingSpotOrder) ProtoMessage()    {}
func (*MsgUpdatePendingSpotOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{2}
}
func (m *MsgUpdatePendingSpotOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePendingSpotOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePendingSpotOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePendingSpotOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePendingSpotOrder.Merge(m, src)
}
func (m *MsgUpdatePendingSpotOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePendingSpotOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePendingSpotOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePendingSpotOrder proto.InternalMessageInfo

func (m *MsgUpdatePendingSpotOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePendingSpotOrder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePendingSpotOrder) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

type MsgUpdatePendingSpotOrderResponse struct {
}

func (m *MsgUpdatePendingSpotOrderResponse) Reset()         { *m = MsgUpdatePendingSpotOrderResponse{} }
func (m *MsgUpdatePendingSpotOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePendingSpotOrderResponse) ProtoMessage()    {}
func (*MsgUpdatePendingSpotOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{3}
}
func (m *MsgUpdatePendingSpotOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePendingSpotOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePendingSpotOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePendingSpotOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePendingSpotOrderResponse.Merge(m, src)
}
func (m *MsgUpdatePendingSpotOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePendingSpotOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePendingSpotOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePendingSpotOrderResponse proto.InternalMessageInfo

type MsgDeletePendingSpotOrder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePendingSpotOrder) Reset()         { *m = MsgDeletePendingSpotOrder{} }
func (m *MsgDeletePendingSpotOrder) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePendingSpotOrder) ProtoMessage()    {}
func (*MsgDeletePendingSpotOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{4}
}
func (m *MsgDeletePendingSpotOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePendingSpotOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePendingSpotOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePendingSpotOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePendingSpotOrder.Merge(m, src)
}
func (m *MsgDeletePendingSpotOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePendingSpotOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePendingSpotOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePendingSpotOrder proto.InternalMessageInfo

func (m *MsgDeletePendingSpotOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePendingSpotOrder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePendingSpotOrderResponse struct {
}

func (m *MsgDeletePendingSpotOrderResponse) Reset()         { *m = MsgDeletePendingSpotOrderResponse{} }
func (m *MsgDeletePendingSpotOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePendingSpotOrderResponse) ProtoMessage()    {}
func (*MsgDeletePendingSpotOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{5}
}
func (m *MsgDeletePendingSpotOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePendingSpotOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePendingSpotOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePendingSpotOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePendingSpotOrderResponse.Merge(m, src)
}
func (m *MsgDeletePendingSpotOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePendingSpotOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePendingSpotOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePendingSpotOrderResponse proto.InternalMessageInfo

type MsgCreatePendingPerpetualOrder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Order   string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (m *MsgCreatePendingPerpetualOrder) Reset()         { *m = MsgCreatePendingPerpetualOrder{} }
func (m *MsgCreatePendingPerpetualOrder) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePendingPerpetualOrder) ProtoMessage()    {}
func (*MsgCreatePendingPerpetualOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{6}
}
func (m *MsgCreatePendingPerpetualOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePendingPerpetualOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePendingPerpetualOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePendingPerpetualOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePendingPerpetualOrder.Merge(m, src)
}
func (m *MsgCreatePendingPerpetualOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePendingPerpetualOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePendingPerpetualOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePendingPerpetualOrder proto.InternalMessageInfo

func (m *MsgCreatePendingPerpetualOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePendingPerpetualOrder) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

type MsgCreatePendingPerpetualOrderResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreatePendingPerpetualOrderResponse) Reset() {
	*m = MsgCreatePendingPerpetualOrderResponse{}
}
func (m *MsgCreatePendingPerpetualOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePendingPerpetualOrderResponse) ProtoMessage()    {}
func (*MsgCreatePendingPerpetualOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{7}
}
func (m *MsgCreatePendingPerpetualOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePendingPerpetualOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePendingPerpetualOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePendingPerpetualOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePendingPerpetualOrderResponse.Merge(m, src)
}
func (m *MsgCreatePendingPerpetualOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePendingPerpetualOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePendingPerpetualOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePendingPerpetualOrderResponse proto.InternalMessageInfo

func (m *MsgCreatePendingPerpetualOrderResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdatePendingPerpetualOrder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Order   string `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (m *MsgUpdatePendingPerpetualOrder) Reset()         { *m = MsgUpdatePendingPerpetualOrder{} }
func (m *MsgUpdatePendingPerpetualOrder) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePendingPerpetualOrder) ProtoMessage()    {}
func (*MsgUpdatePendingPerpetualOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{8}
}
func (m *MsgUpdatePendingPerpetualOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePendingPerpetualOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePendingPerpetualOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePendingPerpetualOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePendingPerpetualOrder.Merge(m, src)
}
func (m *MsgUpdatePendingPerpetualOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePendingPerpetualOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePendingPerpetualOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePendingPerpetualOrder proto.InternalMessageInfo

func (m *MsgUpdatePendingPerpetualOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePendingPerpetualOrder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdatePendingPerpetualOrder) GetOrder() string {
	if m != nil {
		return m.Order
	}
	return ""
}

type MsgUpdatePendingPerpetualOrderResponse struct {
}

func (m *MsgUpdatePendingPerpetualOrderResponse) Reset() {
	*m = MsgUpdatePendingPerpetualOrderResponse{}
}
func (m *MsgUpdatePendingPerpetualOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePendingPerpetualOrderResponse) ProtoMessage()    {}
func (*MsgUpdatePendingPerpetualOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{9}
}
func (m *MsgUpdatePendingPerpetualOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePendingPerpetualOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePendingPerpetualOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePendingPerpetualOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePendingPerpetualOrderResponse.Merge(m, src)
}
func (m *MsgUpdatePendingPerpetualOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePendingPerpetualOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePendingPerpetualOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePendingPerpetualOrderResponse proto.InternalMessageInfo

type MsgDeletePendingPerpetualOrder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeletePendingPerpetualOrder) Reset()         { *m = MsgDeletePendingPerpetualOrder{} }
func (m *MsgDeletePendingPerpetualOrder) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePendingPerpetualOrder) ProtoMessage()    {}
func (*MsgDeletePendingPerpetualOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{10}
}
func (m *MsgDeletePendingPerpetualOrder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePendingPerpetualOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePendingPerpetualOrder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePendingPerpetualOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePendingPerpetualOrder.Merge(m, src)
}
func (m *MsgDeletePendingPerpetualOrder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePendingPerpetualOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePendingPerpetualOrder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePendingPerpetualOrder proto.InternalMessageInfo

func (m *MsgDeletePendingPerpetualOrder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePendingPerpetualOrder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePendingPerpetualOrderResponse struct {
}

func (m *MsgDeletePendingPerpetualOrderResponse) Reset() {
	*m = MsgDeletePendingPerpetualOrderResponse{}
}
func (m *MsgDeletePendingPerpetualOrderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePendingPerpetualOrderResponse) ProtoMessage()    {}
func (*MsgDeletePendingPerpetualOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0534a5eaf85a8c0b, []int{11}
}
func (m *MsgDeletePendingPerpetualOrderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePendingPerpetualOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePendingPerpetualOrderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePendingPerpetualOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePendingPerpetualOrderResponse.Merge(m, src)
}
func (m *MsgDeletePendingPerpetualOrderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePendingPerpetualOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePendingPerpetualOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePendingPerpetualOrderResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreatePendingSpotOrder)(nil), "elys.tradeshield.MsgCreatePendingSpotOrder")
	proto.RegisterType((*MsgCreatePendingSpotOrderResponse)(nil), "elys.tradeshield.MsgCreatePendingSpotOrderResponse")
	proto.RegisterType((*MsgUpdatePendingSpotOrder)(nil), "elys.tradeshield.MsgUpdatePendingSpotOrder")
	proto.RegisterType((*MsgUpdatePendingSpotOrderResponse)(nil), "elys.tradeshield.MsgUpdatePendingSpotOrderResponse")
	proto.RegisterType((*MsgDeletePendingSpotOrder)(nil), "elys.tradeshield.MsgDeletePendingSpotOrder")
	proto.RegisterType((*MsgDeletePendingSpotOrderResponse)(nil), "elys.tradeshield.MsgDeletePendingSpotOrderResponse")
	proto.RegisterType((*MsgCreatePendingPerpetualOrder)(nil), "elys.tradeshield.MsgCreatePendingPerpetualOrder")
	proto.RegisterType((*MsgCreatePendingPerpetualOrderResponse)(nil), "elys.tradeshield.MsgCreatePendingPerpetualOrderResponse")
	proto.RegisterType((*MsgUpdatePendingPerpetualOrder)(nil), "elys.tradeshield.MsgUpdatePendingPerpetualOrder")
	proto.RegisterType((*MsgUpdatePendingPerpetualOrderResponse)(nil), "elys.tradeshield.MsgUpdatePendingPerpetualOrderResponse")
	proto.RegisterType((*MsgDeletePendingPerpetualOrder)(nil), "elys.tradeshield.MsgDeletePendingPerpetualOrder")
	proto.RegisterType((*MsgDeletePendingPerpetualOrderResponse)(nil), "elys.tradeshield.MsgDeletePendingPerpetualOrderResponse")
}

func init() { proto.RegisterFile("elys/tradeshield/tx.proto", fileDescriptor_0534a5eaf85a8c0b) }

var fileDescriptor_0534a5eaf85a8c0b = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xda, 0x4c,
	0x14, 0x8d, 0x09, 0x21, 0x1f, 0x93, 0x7c, 0x51, 0x34, 0xaa, 0x90, 0xa1, 0x91, 0x4b, 0x89, 0x54,
	0xa1, 0xfe, 0xd8, 0x04, 0x36, 0x59, 0xb4, 0x95, 0xd2, 0xd0, 0x4d, 0xa4, 0xa8, 0xc8, 0x6d, 0x37,
	0xed, 0x22, 0x35, 0xcc, 0x15, 0xb1, 0x0a, 0x1e, 0x6b, 0x66, 0x68, 0x42, 0xde, 0x20, 0xbb, 0xbe,
	0x40, 0xdf, 0xa7, 0xcb, 0x2c, 0xbb, 0xac, 0xe0, 0x45, 0x2a, 0x5f, 0x1b, 0x14, 0x82, 0x6d, 0x9c,
	0x76, 0x37, 0x3f, 0xe7, 0xde, 0x73, 0xee, 0xb9, 0x73, 0x6d, 0x52, 0x86, 0xc1, 0x58, 0x5a, 0x4a,
	0x38, 0x0c, 0xe4, 0xb9, 0x0b, 0x03, 0x66, 0xa9, 0x4b, 0xd3, 0x17, 0x5c, 0x71, 0xba, 0x1b, 0x5c,
	0x99, 0xb7, 0xae, 0x2a, 0x7b, 0xcb, 0xe0, 0xb1, 0x0f, 0x32, 0xc4, 0x57, 0x8c, 0x1e, 0x97, 0x43,
	0x2e, 0xad, 0xae, 0x23, 0xc1, 0xfa, 0x76, 0xd0, 0x05, 0xe5, 0x1c, 0x58, 0x3d, 0xee, 0x7a, 0xe1,
	0x7d, 0xed, 0x7a, 0x9d, 0x94, 0x4f, 0x65, 0xff, 0x58, 0x80, 0xa3, 0xa0, 0x03, 0x1e, 0x73, 0xbd,
	0xfe, 0x7b, 0x9f, 0xab, 0x77, 0x82, 0x81, 0xa0, 0xaf, 0x09, 0xe1, 0xc1, 0xe2, 0x2c, 0x48, 0xa9,
	0x6b, 0x55, 0xad, 0xbe, 0xd3, 0x7c, 0x64, 0xde, 0x95, 0x60, 0xce, 0x03, 0x3e, 0x8c, 0x7d, 0xb0,
	0x8b, 0x7c, 0xb6, 0xa4, 0xaf, 0xc8, 0x56, 0x18, 0xef, 0x0b, 0xb7, 0x07, 0xfa, 0x7a, 0x55, 0xab,
	0x6f, 0x35, 0xf7, 0x96, 0x13, 0x60, 0x70, 0x27, 0xc0, 0xd8, 0x21, 0x21, 0xae, 0xe9, 0x4b, 0xb2,
	0x1d, 0x86, 0x3b, 0x43, 0x3e, 0xf2, 0x94, 0x9e, 0xc7, 0xf8, 0xb2, 0x19, 0xd6, 0x64, 0x06, 0x35,
	0x99, 0x51, 0x4d, 0xe6, 0x31, 0x77, 0x3d, 0x3b, 0x64, 0x3b, 0x42, 0x34, 0xdd, 0x27, 0xff, 0xf3,
	0x0b, 0x2f, 0x88, 0x66, 0x4c, 0x80, 0x94, 0xfa, 0x46, 0x55, 0xab, 0x17, 0xed, 0x6d, 0x3c, 0x3c,
	0x0a, 0xcf, 0xe8, 0x73, 0x42, 0xa3, 0x0a, 0x1d, 0xd1, 0x07, 0x75, 0xc6, 0xc0, 0xe3, 0x43, 0xbd,
	0x80, 0xc8, 0xdd, 0xb0, 0x10, 0xbc, 0x68, 0x07, 0xe7, 0xb4, 0x41, 0x0a, 0x52, 0x39, 0x6a, 0x24,
	0xf5, 0x4d, 0xf4, 0x42, 0x8f, 0xf1, 0x02, 0xef, 0xed, 0x08, 0x47, 0x9f, 0x92, 0x3c, 0x73, 0x14,
	0xe8, 0xff, 0xa1, 0xf4, 0xd2, 0x32, 0xbe, 0xed, 0x28, 0xb0, 0x11, 0x53, 0x6b, 0x91, 0xc7, 0x89,
	0xad, 0xb0, 0x41, 0xfa, 0xdc, 0x93, 0x40, 0x77, 0x48, 0xce, 0x65, 0xd8, 0x8a, 0xbc, 0x9d, 0x73,
	0x59, 0xed, 0x33, 0xf6, 0xef, 0xa3, 0xcf, 0xe2, 0xfa, 0xa7, 0x93, 0xcd, 0x5e, 0x90, 0x8e, 0x0b,
	0x8c, 0x28, 0xda, 0xb3, 0x6d, 0x94, 0x26, 0x37, 0x4b, 0x43, 0x1f, 0x90, 0x0d, 0xac, 0x16, 0x7b,
	0x54, 0xb4, 0xc3, 0x4d, 0x6d, 0x1f, 0x15, 0xc5, 0x27, 0x9f, 0x29, 0xaa, 0xbd, 0x45, 0x05, 0x6d,
	0x18, 0xc0, 0xbf, 0x28, 0x88, 0xb8, 0xe2, 0xd3, 0xcc, 0xb9, 0x3a, 0xc4, 0xb8, 0x6b, 0x51, 0x07,
	0x84, 0x0f, 0x6a, 0xe4, 0x0c, 0x56, 0x11, 0xce, 0x4b, 0xcc, 0xdd, 0x2e, 0xf1, 0x90, 0x3c, 0x49,
	0xcf, 0x98, 0xe8, 0xfc, 0x17, 0xd4, 0xb2, 0x60, 0x4e, 0x66, 0x2d, 0xd9, 0xec, 0xaf, 0xa3, 0xb6,
	0x14, 0x86, 0xb9, 0x2f, 0x27, 0xa8, 0x65, 0xc1, 0xbc, 0xbf, 0xd5, 0x12, 0xb1, 0xa6, 0xe4, 0x9a,
	0xb1, 0x36, 0x7f, 0x14, 0xc8, 0xfa, 0xa9, 0xec, 0xd3, 0x2b, 0x52, 0x4a, 0xf8, 0x80, 0x3c, 0x5b,
	0x7e, 0xf0, 0x89, 0x4f, 0xbc, 0xd2, 0xba, 0x07, 0x78, 0xde, 0x95, 0x2b, 0x52, 0x4a, 0x78, 0xfc,
	0xf1, 0xdc, 0xf1, 0xe0, 0x04, 0xee, 0xf4, 0x97, 0x1f, 0x70, 0x27, 0x3c, 0xfb, 0x78, 0xee, 0x78,
	0x70, 0x02, 0x77, 0xfa, 0x24, 0xd0, 0x6b, 0x8d, 0x3c, 0x4c, 0x9b, 0x83, 0xc6, 0x6a, 0x33, 0x17,
	0x23, 0x2a, 0x87, 0xf7, 0x8d, 0x58, 0xd0, 0x92, 0x36, 0x07, 0x8d, 0xd5, 0xe6, 0x66, 0xd2, 0x92,
	0x61, 0x12, 0x50, 0x4b, 0xda, 0x1c, 0x34, 0x56, 0x9b, 0x9d, 0x49, 0x4b, 0x86, 0xf9, 0x78, 0x73,
	0xf2, 0x73, 0x62, 0x68, 0x37, 0x13, 0x43, 0xfb, 0x3d, 0x31, 0xb4, 0xef, 0x53, 0x63, 0xed, 0x66,
	0x6a, 0xac, 0xfd, 0x9a, 0x1a, 0x6b, 0x9f, 0x1a, 0x7d, 0x57, 0x9d, 0x8f, 0xba, 0x66, 0x8f, 0x0f,
	0xad, 0x20, 0xfb, 0x0b, 0x0f, 0xd4, 0x05, 0x17, 0x5f, 0x71, 0x63, 0x5d, 0x2e, 0xff, 0xce, 0xbb,
	0x05, 0xfc, 0x5f, 0xb7, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xda, 0x05, 0x62, 0x1c, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreatePendingSpotOrder(ctx context.Context, in *MsgCreatePendingSpotOrder, opts ...grpc.CallOption) (*MsgCreatePendingSpotOrderResponse, error)
	UpdatePendingSpotOrder(ctx context.Context, in *MsgUpdatePendingSpotOrder, opts ...grpc.CallOption) (*MsgUpdatePendingSpotOrderResponse, error)
	DeletePendingSpotOrder(ctx context.Context, in *MsgDeletePendingSpotOrder, opts ...grpc.CallOption) (*MsgDeletePendingSpotOrderResponse, error)
	CreatePendingPerpetualOrder(ctx context.Context, in *MsgCreatePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgCreatePendingPerpetualOrderResponse, error)
	UpdatePendingPerpetualOrder(ctx context.Context, in *MsgUpdatePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgUpdatePendingPerpetualOrderResponse, error)
	DeletePendingPerpetualOrder(ctx context.Context, in *MsgDeletePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgDeletePendingPerpetualOrderResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreatePendingSpotOrder(ctx context.Context, in *MsgCreatePendingSpotOrder, opts ...grpc.CallOption) (*MsgCreatePendingSpotOrderResponse, error) {
	out := new(MsgCreatePendingSpotOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/CreatePendingSpotOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePendingSpotOrder(ctx context.Context, in *MsgUpdatePendingSpotOrder, opts ...grpc.CallOption) (*MsgUpdatePendingSpotOrderResponse, error) {
	out := new(MsgUpdatePendingSpotOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/UpdatePendingSpotOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePendingSpotOrder(ctx context.Context, in *MsgDeletePendingSpotOrder, opts ...grpc.CallOption) (*MsgDeletePendingSpotOrderResponse, error) {
	out := new(MsgDeletePendingSpotOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/DeletePendingSpotOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePendingPerpetualOrder(ctx context.Context, in *MsgCreatePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgCreatePendingPerpetualOrderResponse, error) {
	out := new(MsgCreatePendingPerpetualOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/CreatePendingPerpetualOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePendingPerpetualOrder(ctx context.Context, in *MsgUpdatePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgUpdatePendingPerpetualOrderResponse, error) {
	out := new(MsgUpdatePendingPerpetualOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/UpdatePendingPerpetualOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePendingPerpetualOrder(ctx context.Context, in *MsgDeletePendingPerpetualOrder, opts ...grpc.CallOption) (*MsgDeletePendingPerpetualOrderResponse, error) {
	out := new(MsgDeletePendingPerpetualOrderResponse)
	err := c.cc.Invoke(ctx, "/elys.tradeshield.Msg/DeletePendingPerpetualOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreatePendingSpotOrder(context.Context, *MsgCreatePendingSpotOrder) (*MsgCreatePendingSpotOrderResponse, error)
	UpdatePendingSpotOrder(context.Context, *MsgUpdatePendingSpotOrder) (*MsgUpdatePendingSpotOrderResponse, error)
	DeletePendingSpotOrder(context.Context, *MsgDeletePendingSpotOrder) (*MsgDeletePendingSpotOrderResponse, error)
	CreatePendingPerpetualOrder(context.Context, *MsgCreatePendingPerpetualOrder) (*MsgCreatePendingPerpetualOrderResponse, error)
	UpdatePendingPerpetualOrder(context.Context, *MsgUpdatePendingPerpetualOrder) (*MsgUpdatePendingPerpetualOrderResponse, error)
	DeletePendingPerpetualOrder(context.Context, *MsgDeletePendingPerpetualOrder) (*MsgDeletePendingPerpetualOrderResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreatePendingSpotOrder(ctx context.Context, req *MsgCreatePendingSpotOrder) (*MsgCreatePendingSpotOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePendingSpotOrder not implemented")
}
func (*UnimplementedMsgServer) UpdatePendingSpotOrder(ctx context.Context, req *MsgUpdatePendingSpotOrder) (*MsgUpdatePendingSpotOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePendingSpotOrder not implemented")
}
func (*UnimplementedMsgServer) DeletePendingSpotOrder(ctx context.Context, req *MsgDeletePendingSpotOrder) (*MsgDeletePendingSpotOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePendingSpotOrder not implemented")
}
func (*UnimplementedMsgServer) CreatePendingPerpetualOrder(ctx context.Context, req *MsgCreatePendingPerpetualOrder) (*MsgCreatePendingPerpetualOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePendingPerpetualOrder not implemented")
}
func (*UnimplementedMsgServer) UpdatePendingPerpetualOrder(ctx context.Context, req *MsgUpdatePendingPerpetualOrder) (*MsgUpdatePendingPerpetualOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePendingPerpetualOrder not implemented")
}
func (*UnimplementedMsgServer) DeletePendingPerpetualOrder(ctx context.Context, req *MsgDeletePendingPerpetualOrder) (*MsgDeletePendingPerpetualOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePendingPerpetualOrder not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreatePendingSpotOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePendingSpotOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePendingSpotOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/CreatePendingSpotOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePendingSpotOrder(ctx, req.(*MsgCreatePendingSpotOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePendingSpotOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePendingSpotOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePendingSpotOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/UpdatePendingSpotOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePendingSpotOrder(ctx, req.(*MsgUpdatePendingSpotOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePendingSpotOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePendingSpotOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePendingSpotOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/DeletePendingSpotOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePendingSpotOrder(ctx, req.(*MsgDeletePendingSpotOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePendingPerpetualOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePendingPerpetualOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePendingPerpetualOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/CreatePendingPerpetualOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePendingPerpetualOrder(ctx, req.(*MsgCreatePendingPerpetualOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePendingPerpetualOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePendingPerpetualOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePendingPerpetualOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/UpdatePendingPerpetualOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePendingPerpetualOrder(ctx, req.(*MsgUpdatePendingPerpetualOrder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePendingPerpetualOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePendingPerpetualOrder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePendingPerpetualOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.tradeshield.Msg/DeletePendingPerpetualOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePendingPerpetualOrder(ctx, req.(*MsgDeletePendingPerpetualOrder))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "elys.tradeshield.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePendingSpotOrder",
			Handler:    _Msg_CreatePendingSpotOrder_Handler,
		},
		{
			MethodName: "UpdatePendingSpotOrder",
			Handler:    _Msg_UpdatePendingSpotOrder_Handler,
		},
		{
			MethodName: "DeletePendingSpotOrder",
			Handler:    _Msg_DeletePendingSpotOrder_Handler,
		},
		{
			MethodName: "CreatePendingPerpetualOrder",
			Handler:    _Msg_CreatePendingPerpetualOrder_Handler,
		},
		{
			MethodName: "UpdatePendingPerpetualOrder",
			Handler:    _Msg_UpdatePendingPerpetualOrder_Handler,
		},
		{
			MethodName: "DeletePendingPerpetualOrder",
			Handler:    _Msg_DeletePendingPerpetualOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "elys/tradeshield/tx.proto",
}

func (m *MsgCreatePendingSpotOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePendingSpotOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePendingSpotOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Date != nil {
		{
			size, err := m.Date.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Status != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Status))
		i--
		dAtA[i] = 0x38
	}
	if len(m.OrderTargetDenom) > 0 {
		i -= len(m.OrderTargetDenom)
		copy(dAtA[i:], m.OrderTargetDenom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OrderTargetDenom)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if m.OrderAmount != nil {
		{
			size, err := m.OrderAmount.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.OrderPrice != nil {
		{
			size, err := m.OrderPrice.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.OrderType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.OrderType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePendingSpotOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePendingSpotOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePendingSpotOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePendingSpotOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePendingSpotOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePendingSpotOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Order) > 0 {
		i -= len(m.Order)
		copy(dAtA[i:], m.Order)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Order)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePendingSpotOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePendingSpotOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePendingSpotOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePendingSpotOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePendingSpotOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePendingSpotOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePendingSpotOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePendingSpotOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePendingSpotOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePendingPerpetualOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePendingPerpetualOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePendingPerpetualOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Order) > 0 {
		i -= len(m.Order)
		copy(dAtA[i:], m.Order)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Order)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePendingPerpetualOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePendingPerpetualOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePendingPerpetualOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePendingPerpetualOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePendingPerpetualOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePendingPerpetualOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Order) > 0 {
		i -= len(m.Order)
		copy(dAtA[i:], m.Order)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Order)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePendingPerpetualOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePendingPerpetualOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePendingPerpetualOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePendingPerpetualOrder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePendingPerpetualOrder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePendingPerpetualOrder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePendingPerpetualOrderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePendingPerpetualOrderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePendingPerpetualOrderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreatePendingSpotOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.OrderType != 0 {
		n += 1 + sovTx(uint64(m.OrderType))
	}
	if m.OrderPrice != nil {
		l = m.OrderPrice.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OrderAmount != nil {
		l = m.OrderAmount.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OrderTargetDenom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovTx(uint64(m.Status))
	}
	if m.Date != nil {
		l = m.Date.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePendingSpotOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePendingSpotOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Order)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePendingSpotOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePendingSpotOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePendingSpotOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePendingPerpetualOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Order)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePendingPerpetualOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdatePendingPerpetualOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Order)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePendingPerpetualOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePendingPerpetualOrder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePendingPerpetualOrderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreatePendingSpotOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePendingSpotOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePendingSpotOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderType", wireType)
			}
			m.OrderType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.OrderType |= SpotOrderType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderPrice", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderPrice == nil {
				m.OrderPrice = &OrderPrice{}
			}
			if err := m.OrderPrice.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OrderAmount == nil {
				m.OrderAmount = &types.Coin{}
			}
			if err := m.OrderAmount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OrderTargetDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OrderTargetDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Date == nil {
				m.Date = &Date{}
			}
			if err := m.Date.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePendingSpotOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePendingSpotOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePendingSpotOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePendingSpotOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePendingSpotOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePendingSpotOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePendingSpotOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePendingSpotOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePendingSpotOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePendingSpotOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePendingSpotOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePendingSpotOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePendingSpotOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePendingSpotOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePendingSpotOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePendingPerpetualOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePendingPerpetualOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePendingPerpetualOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePendingPerpetualOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePendingPerpetualOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePendingPerpetualOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePendingPerpetualOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePendingPerpetualOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePendingPerpetualOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Order", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Order = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePendingPerpetualOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePendingPerpetualOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePendingPerpetualOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePendingPerpetualOrder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePendingPerpetualOrder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePendingPerpetualOrder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePendingPerpetualOrderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePendingPerpetualOrderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePendingPerpetualOrderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
