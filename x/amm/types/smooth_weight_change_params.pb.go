// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: elys/amm/smooth_weight_change_params.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type SmoothWeightChangeParams struct {
	StartTime          string       `protobuf:"bytes,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Duration           string       `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	InitialPoolWeights []*PoolAsset `protobuf:"bytes,3,rep,name=initialPoolWeights,proto3" json:"initialPoolWeights,omitempty"`
	TargetPoolWeights  []*PoolAsset `protobuf:"bytes,4,rep,name=targetPoolWeights,proto3" json:"targetPoolWeights,omitempty"`
}

func (m *SmoothWeightChangeParams) Reset()         { *m = SmoothWeightChangeParams{} }
func (m *SmoothWeightChangeParams) String() string { return proto.CompactTextString(m) }
func (*SmoothWeightChangeParams) ProtoMessage()    {}
func (*SmoothWeightChangeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b785911993d4620d, []int{0}
}
func (m *SmoothWeightChangeParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SmoothWeightChangeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SmoothWeightChangeParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SmoothWeightChangeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SmoothWeightChangeParams.Merge(m, src)
}
func (m *SmoothWeightChangeParams) XXX_Size() int {
	return m.Size()
}
func (m *SmoothWeightChangeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SmoothWeightChangeParams.DiscardUnknown(m)
}

var xxx_messageInfo_SmoothWeightChangeParams proto.InternalMessageInfo

func (m *SmoothWeightChangeParams) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *SmoothWeightChangeParams) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *SmoothWeightChangeParams) GetInitialPoolWeights() []*PoolAsset {
	if m != nil {
		return m.InitialPoolWeights
	}
	return nil
}

func (m *SmoothWeightChangeParams) GetTargetPoolWeights() []*PoolAsset {
	if m != nil {
		return m.TargetPoolWeights
	}
	return nil
}

func init() {
	proto.RegisterType((*SmoothWeightChangeParams)(nil), "elysnetwork.elys.amm.SmoothWeightChangeParams")
}

func init() {
	proto.RegisterFile("elys/amm/smooth_weight_change_params.proto", fileDescriptor_b785911993d4620d)
}

var fileDescriptor_b785911993d4620d = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd0, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0x07, 0xf0, 0xec, 0xd7, 0x0f, 0xb1, 0xeb, 0xc9, 0xc5, 0x43, 0x2c, 0xb2, 0x16, 0x4f, 0x41,
	0x70, 0x03, 0xfa, 0x04, 0xd6, 0xb3, 0x58, 0xaa, 0x20, 0x78, 0x09, 0xd3, 0xba, 0x24, 0x8b, 0xd9,
	0x4c, 0xd8, 0x9d, 0x52, 0xfb, 0x16, 0x3e, 0x96, 0xc7, 0x1e, 0x3d, 0x4a, 0xf2, 0x0a, 0x3e, 0x80,
	0x64, 0x2b, 0x55, 0xb0, 0x07, 0x6f, 0x3b, 0x3b, 0xf3, 0xff, 0x31, 0x0c, 0x3f, 0xd5, 0xe5, 0xd2,
	0xa7, 0x60, 0x6d, 0xea, 0x2d, 0x22, 0x15, 0xd9, 0x42, 0x9b, 0xbc, 0xa0, 0x6c, 0x56, 0x40, 0x95,
	0xeb, 0xac, 0x06, 0x07, 0xd6, 0xab, 0xda, 0x21, 0xa1, 0x38, 0xe8, 0x66, 0x2b, 0x4d, 0x0b, 0x74,
	0x4f, 0xaa, 0x7b, 0x2b, 0xb0, 0x76, 0x70, 0xb8, 0x11, 0x6a, 0xc4, 0x32, 0x03, 0xef, 0x35, 0xad,
	0x03, 0x27, 0x1f, 0x8c, 0xc7, 0xb7, 0x81, 0xbd, 0x0f, 0xea, 0x55, 0x40, 0xc7, 0xc1, 0x14, 0x47,
	0xbc, 0xef, 0x09, 0x1c, 0xdd, 0x19, 0xab, 0x63, 0x36, 0x64, 0x49, 0x7f, 0xf2, 0xfd, 0x21, 0x06,
	0x7c, 0xf7, 0x71, 0xee, 0x80, 0x0c, 0x56, 0xf1, 0xbf, 0xd0, 0xdc, 0xd4, 0xe2, 0x86, 0x0b, 0x53,
	0x19, 0x32, 0x50, 0x8e, 0x11, 0xcb, 0x35, 0xed, 0xe3, 0xde, 0xb0, 0x97, 0xec, 0x9d, 0x1f, 0xab,
	0x6d, 0x4b, 0xaa, 0x6e, 0xf0, 0xb2, 0xdb, 0x6c, 0xb2, 0x25, 0x2a, 0xae, 0xf9, 0x3e, 0x81, 0xcb,
	0x35, 0xfd, 0xf4, 0xfe, 0xff, 0xcd, 0xfb, 0x9d, 0x1c, 0x8d, 0x5e, 0x1b, 0xc9, 0x56, 0x8d, 0x64,
	0xef, 0x8d, 0x64, 0x2f, 0xad, 0x8c, 0x56, 0xad, 0x8c, 0xde, 0x5a, 0x19, 0x3d, 0x24, 0xb9, 0xa1,
	0x62, 0x3e, 0x55, 0x33, 0xb4, 0x69, 0x67, 0x9d, 0x7d, 0xc1, 0xa1, 0x48, 0x9f, 0xc3, 0x15, 0x69,
	0x59, 0x6b, 0x3f, 0xdd, 0x09, 0x17, 0xbc, 0xf8, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x16, 0x50, 0xd5,
	0x27, 0xa0, 0x01, 0x00, 0x00,
}

func (m *SmoothWeightChangeParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SmoothWeightChangeParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SmoothWeightChangeParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.TargetPoolWeights) > 0 {
		for iNdEx := len(m.TargetPoolWeights) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.TargetPoolWeights[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmoothWeightChangeParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.InitialPoolWeights) > 0 {
		for iNdEx := len(m.InitialPoolWeights) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InitialPoolWeights[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintSmoothWeightChangeParams(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Duration) > 0 {
		i -= len(m.Duration)
		copy(dAtA[i:], m.Duration)
		i = encodeVarintSmoothWeightChangeParams(dAtA, i, uint64(len(m.Duration)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.StartTime) > 0 {
		i -= len(m.StartTime)
		copy(dAtA[i:], m.StartTime)
		i = encodeVarintSmoothWeightChangeParams(dAtA, i, uint64(len(m.StartTime)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintSmoothWeightChangeParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovSmoothWeightChangeParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SmoothWeightChangeParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.StartTime)
	if l > 0 {
		n += 1 + l + sovSmoothWeightChangeParams(uint64(l))
	}
	l = len(m.Duration)
	if l > 0 {
		n += 1 + l + sovSmoothWeightChangeParams(uint64(l))
	}
	if len(m.InitialPoolWeights) > 0 {
		for _, e := range m.InitialPoolWeights {
			l = e.Size()
			n += 1 + l + sovSmoothWeightChangeParams(uint64(l))
		}
	}
	if len(m.TargetPoolWeights) > 0 {
		for _, e := range m.TargetPoolWeights {
			l = e.Size()
			n += 1 + l + sovSmoothWeightChangeParams(uint64(l))
		}
	}
	return n
}

func sovSmoothWeightChangeParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozSmoothWeightChangeParams(x uint64) (n int) {
	return sovSmoothWeightChangeParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SmoothWeightChangeParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowSmoothWeightChangeParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SmoothWeightChangeParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SmoothWeightChangeParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTime = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Duration = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitialPoolWeights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitialPoolWeights = append(m.InitialPoolWeights, &PoolAsset{})
			if err := m.InitialPoolWeights[len(m.InitialPoolWeights)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TargetPoolWeights", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TargetPoolWeights = append(m.TargetPoolWeights, &PoolAsset{})
			if err := m.TargetPoolWeights[len(m.TargetPoolWeights)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipSmoothWeightChangeParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthSmoothWeightChangeParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipSmoothWeightChangeParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowSmoothWeightChangeParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowSmoothWeightChangeParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthSmoothWeightChangeParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupSmoothWeightChangeParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthSmoothWeightChangeParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthSmoothWeightChangeParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowSmoothWeightChangeParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupSmoothWeightChangeParams = fmt.Errorf("proto: unexpected end of group")
)
