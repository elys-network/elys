// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: elys/oracle/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgFeedPrice struct {
	Asset    string                                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Price    github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=price,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"price"`
	Source   string                                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Provider string                                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgFeedPrice) Reset()         { *m = MsgFeedPrice{} }
func (m *MsgFeedPrice) String() string { return proto.CompactTextString(m) }
func (*MsgFeedPrice) ProtoMessage()    {}
func (*MsgFeedPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{0}
}
func (m *MsgFeedPrice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFeedPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFeedPrice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFeedPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFeedPrice.Merge(m, src)
}
func (m *MsgFeedPrice) XXX_Size() int {
	return m.Size()
}
func (m *MsgFeedPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFeedPrice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFeedPrice proto.InternalMessageInfo

func (m *MsgFeedPrice) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *MsgFeedPrice) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *MsgFeedPrice) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgFeedPriceResponse struct {
}

func (m *MsgFeedPriceResponse) Reset()         { *m = MsgFeedPriceResponse{} }
func (m *MsgFeedPriceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFeedPriceResponse) ProtoMessage()    {}
func (*MsgFeedPriceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{1}
}
func (m *MsgFeedPriceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFeedPriceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFeedPriceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFeedPriceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFeedPriceResponse.Merge(m, src)
}
func (m *MsgFeedPriceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFeedPriceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFeedPriceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFeedPriceResponse proto.InternalMessageInfo

type MsgSetPriceFeeder struct {
	Feeder   string `protobuf:"bytes,1,opt,name=feeder,proto3" json:"feeder,omitempty"`
	IsActive bool   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (m *MsgSetPriceFeeder) Reset()         { *m = MsgSetPriceFeeder{} }
func (m *MsgSetPriceFeeder) String() string { return proto.CompactTextString(m) }
func (*MsgSetPriceFeeder) ProtoMessage()    {}
func (*MsgSetPriceFeeder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{2}
}
func (m *MsgSetPriceFeeder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPriceFeeder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPriceFeeder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPriceFeeder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPriceFeeder.Merge(m, src)
}
func (m *MsgSetPriceFeeder) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPriceFeeder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPriceFeeder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPriceFeeder proto.InternalMessageInfo

func (m *MsgSetPriceFeeder) GetFeeder() string {
	if m != nil {
		return m.Feeder
	}
	return ""
}

func (m *MsgSetPriceFeeder) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

type MsgSetPriceFeederResponse struct {
}

func (m *MsgSetPriceFeederResponse) Reset()         { *m = MsgSetPriceFeederResponse{} }
func (m *MsgSetPriceFeederResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetPriceFeederResponse) ProtoMessage()    {}
func (*MsgSetPriceFeederResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{3}
}
func (m *MsgSetPriceFeederResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPriceFeederResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPriceFeederResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPriceFeederResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPriceFeederResponse.Merge(m, src)
}
func (m *MsgSetPriceFeederResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPriceFeederResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPriceFeederResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPriceFeederResponse proto.InternalMessageInfo

type MsgDeletePriceFeeder struct {
	Feeder string `protobuf:"bytes,1,opt,name=feeder,proto3" json:"feeder,omitempty"`
}

func (m *MsgDeletePriceFeeder) Reset()         { *m = MsgDeletePriceFeeder{} }
func (m *MsgDeletePriceFeeder) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePriceFeeder) ProtoMessage()    {}
func (*MsgDeletePriceFeeder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{4}
}
func (m *MsgDeletePriceFeeder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePriceFeeder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePriceFeeder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePriceFeeder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePriceFeeder.Merge(m, src)
}
func (m *MsgDeletePriceFeeder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePriceFeeder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePriceFeeder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePriceFeeder proto.InternalMessageInfo

func (m *MsgDeletePriceFeeder) GetFeeder() string {
	if m != nil {
		return m.Feeder
	}
	return ""
}

type MsgDeletePriceFeederResponse struct {
}

func (m *MsgDeletePriceFeederResponse) Reset()         { *m = MsgDeletePriceFeederResponse{} }
func (m *MsgDeletePriceFeederResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePriceFeederResponse) ProtoMessage()    {}
func (*MsgDeletePriceFeederResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{5}
}
func (m *MsgDeletePriceFeederResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePriceFeederResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePriceFeederResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePriceFeederResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePriceFeederResponse.Merge(m, src)
}
func (m *MsgDeletePriceFeederResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePriceFeederResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePriceFeederResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePriceFeederResponse proto.InternalMessageInfo

type MsgFeedMultiplePrices struct {
	Creator string  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Prices  []Price `protobuf:"bytes,2,rep,name=prices,proto3" json:"prices"`
}

func (m *MsgFeedMultiplePrices) Reset()         { *m = MsgFeedMultiplePrices{} }
func (m *MsgFeedMultiplePrices) String() string { return proto.CompactTextString(m) }
func (*MsgFeedMultiplePrices) ProtoMessage()    {}
func (*MsgFeedMultiplePrices) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{6}
}
func (m *MsgFeedMultiplePrices) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFeedMultiplePrices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFeedMultiplePrices.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFeedMultiplePrices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFeedMultiplePrices.Merge(m, src)
}
func (m *MsgFeedMultiplePrices) XXX_Size() int {
	return m.Size()
}
func (m *MsgFeedMultiplePrices) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFeedMultiplePrices.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFeedMultiplePrices proto.InternalMessageInfo

func (m *MsgFeedMultiplePrices) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFeedMultiplePrices) GetPrices() []Price {
	if m != nil {
		return m.Prices
	}
	return nil
}

type MsgFeedMultiplePricesResponse struct {
}

func (m *MsgFeedMultiplePricesResponse) Reset()         { *m = MsgFeedMultiplePricesResponse{} }
func (m *MsgFeedMultiplePricesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFeedMultiplePricesResponse) ProtoMessage()    {}
func (*MsgFeedMultiplePricesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1fcab3fbd407da0, []int{7}
}
func (m *MsgFeedMultiplePricesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFeedMultiplePricesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFeedMultiplePricesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFeedMultiplePricesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFeedMultiplePricesResponse.Merge(m, src)
}
func (m *MsgFeedMultiplePricesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFeedMultiplePricesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFeedMultiplePricesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFeedMultiplePricesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFeedPrice)(nil), "elys.oracle.MsgFeedPrice")
	proto.RegisterType((*MsgFeedPriceResponse)(nil), "elys.oracle.MsgFeedPriceResponse")
	proto.RegisterType((*MsgSetPriceFeeder)(nil), "elys.oracle.MsgSetPriceFeeder")
	proto.RegisterType((*MsgSetPriceFeederResponse)(nil), "elys.oracle.MsgSetPriceFeederResponse")
	proto.RegisterType((*MsgDeletePriceFeeder)(nil), "elys.oracle.MsgDeletePriceFeeder")
	proto.RegisterType((*MsgDeletePriceFeederResponse)(nil), "elys.oracle.MsgDeletePriceFeederResponse")
	proto.RegisterType((*MsgFeedMultiplePrices)(nil), "elys.oracle.MsgFeedMultiplePrices")
	proto.RegisterType((*MsgFeedMultiplePricesResponse)(nil), "elys.oracle.MsgFeedMultiplePricesResponse")
}

func init() { proto.RegisterFile("elys/oracle/tx.proto", fileDescriptor_f1fcab3fbd407da0) }

var fileDescriptor_f1fcab3fbd407da0 = []byte{
	// 517 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4d, 0x6e, 0xd3, 0x40,
	0x14, 0x8e, 0x93, 0x36, 0x24, 0xaf, 0x08, 0xa9, 0xa3, 0x50, 0x5c, 0xb7, 0x4c, 0x8a, 0x17, 0x55,
	0x01, 0xd5, 0xa6, 0xe5, 0x04, 0x44, 0xa1, 0x82, 0x45, 0x24, 0x14, 0x36, 0x88, 0x4d, 0xe4, 0x8c,
	0x5f, 0x8d, 0x55, 0xd7, 0x63, 0x79, 0x26, 0xa1, 0xbd, 0x05, 0x27, 0xe0, 0x3c, 0x5d, 0x76, 0x89,
	0x58, 0x54, 0x28, 0x39, 0x02, 0x17, 0x40, 0x1e, 0xff, 0xe0, 0xd4, 0x86, 0x76, 0x95, 0xbc, 0xf7,
	0x7d, 0xef, 0xfb, 0xe6, 0x9b, 0x97, 0x09, 0xf4, 0x30, 0xb8, 0x14, 0x36, 0x8f, 0x1d, 0x16, 0xa0,
	0x2d, 0x2f, 0xac, 0x28, 0xe6, 0x92, 0x93, 0x8d, 0xa4, 0x6b, 0xa5, 0x5d, 0xa3, 0xe7, 0x71, 0x8f,
	0xab, 0xbe, 0x9d, 0x7c, 0x4b, 0x29, 0x06, 0x65, 0x5c, 0x9c, 0x73, 0x61, 0x4f, 0x1d, 0x81, 0xf6,
	0xfc, 0x68, 0x8a, 0xd2, 0x39, 0xb2, 0x19, 0xf7, 0xc3, 0x0c, 0xdf, 0x2d, 0x0b, 0x4f, 0x9d, 0xd0,
	0x9d, 0x44, 0xb1, 0xcf, 0xb0, 0x0e, 0x75, 0x84, 0x40, 0x39, 0xf1, 0xc3, 0xd3, 0x5c, 0xfb, 0x49,
	0x19, 0x2d, 0x8f, 0xd1, 0x0a, 0x30, 0x39, 0x45, 0x74, 0x31, 0x4e, 0x71, 0xf3, 0xbb, 0x06, 0x0f,
	0x47, 0xc2, 0x3b, 0x41, 0x74, 0x3f, 0x24, 0x28, 0xe9, 0xc1, 0xba, 0x52, 0xd7, 0xb5, 0x3d, 0xed,
	0xa0, 0x3b, 0x4e, 0x0b, 0x32, 0x84, 0x75, 0x35, 0xac, 0x37, 0x93, 0xee, 0xc0, 0xba, 0xba, 0xe9,
	0x37, 0x7e, 0xde, 0xf4, 0xf7, 0x3d, 0x5f, 0x7e, 0x99, 0x4d, 0x2d, 0xc6, 0xcf, 0xed, 0x2c, 0x5d,
	0xfa, 0x71, 0x28, 0xdc, 0x33, 0x5b, 0x5e, 0x46, 0x28, 0xac, 0x21, 0xb2, 0x71, 0x3a, 0x4c, 0xb6,
	0xa0, 0x2d, 0xf8, 0x2c, 0x66, 0xa8, 0xb7, 0x94, 0x78, 0x56, 0x11, 0x03, 0x3a, 0x51, 0xcc, 0xe7,
	0xbe, 0x8b, 0xb1, 0xbe, 0xa6, 0x90, 0xa2, 0x36, 0xb7, 0xa0, 0x57, 0x3e, 0xdf, 0x18, 0x45, 0xc4,
	0x43, 0x81, 0xe6, 0x3b, 0xd8, 0x1c, 0x09, 0xef, 0x23, 0x4a, 0xd5, 0x3e, 0x51, 0x99, 0x12, 0x83,
	0x34, 0x5d, 0x76, 0xfa, 0xac, 0x22, 0x3b, 0xd0, 0xf5, 0xc5, 0xc4, 0x61, 0xd2, 0x9f, 0xa7, 0x11,
	0x3a, 0xe3, 0x8e, 0x2f, 0xde, 0xa8, 0xda, 0xdc, 0x81, 0xed, 0x8a, 0x52, 0x61, 0x63, 0x29, 0xfb,
	0x21, 0x06, 0x28, 0xf1, 0x1e, 0x4e, 0x26, 0x85, 0xdd, 0x3a, 0x7e, 0xa1, 0xc7, 0xe0, 0x71, 0x16,
	0x67, 0x34, 0x0b, 0xa4, 0x1f, 0x05, 0x29, 0x4b, 0x10, 0x1d, 0x1e, 0xb0, 0x18, 0x1d, 0xc9, 0x73,
	0xc5, 0xbc, 0x24, 0xaf, 0xa0, 0xad, 0xae, 0x4f, 0xe8, 0xcd, 0xbd, 0xd6, 0xc1, 0xc6, 0x31, 0xb1,
	0x4a, 0xbf, 0x35, 0x4b, 0x8d, 0x0f, 0xd6, 0x92, 0x85, 0x8c, 0x33, 0x9e, 0xd9, 0x87, 0xa7, 0xb5,
	0x26, 0xf9, 0x29, 0x8e, 0x7f, 0x37, 0xa1, 0x35, 0x12, 0x1e, 0x79, 0x0f, 0xdd, 0xbf, 0x9b, 0xdf,
	0x5e, 0xd1, 0x2d, 0x5f, 0xba, 0xf1, 0xec, 0x9f, 0x50, 0x2e, 0x49, 0x5c, 0x20, 0x35, 0xa9, 0xcc,
	0xba, 0xc1, 0x55, 0x8e, 0xf1, 0xe2, 0x6e, 0x4e, 0xe1, 0xf2, 0x09, 0x1e, 0xdd, 0x5a, 0x39, 0xbd,
	0x3d, 0xbd, 0x8a, 0x1b, 0xfb, 0xff, 0xc7, 0x0b, 0x65, 0x07, 0x36, 0xab, 0x5b, 0xae, 0xe4, 0xae,
	0x50, 0x8c, 0xe7, 0x77, 0x52, 0x72, 0x8b, 0xc1, 0xdb, 0xab, 0x05, 0xd5, 0xae, 0x17, 0x54, 0xfb,
	0xb5, 0xa0, 0xda, 0xb7, 0x25, 0x6d, 0x5c, 0x2f, 0x69, 0xe3, 0xc7, 0x92, 0x36, 0x3e, 0xbf, 0x2c,
	0xbd, 0xa3, 0x44, 0xee, 0x30, 0x44, 0xf9, 0x95, 0xc7, 0x67, 0xaa, 0xb0, 0x2f, 0x8a, 0x7f, 0x9b,
	0xe4, 0x41, 0x4d, 0xdb, 0xea, 0xe5, 0xbe, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x35, 0xcb, 0x0f,
	0x9a, 0x89, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	FeedPrice(ctx context.Context, in *MsgFeedPrice, opts ...grpc.CallOption) (*MsgFeedPriceResponse, error)
	FeedMultiplePrices(ctx context.Context, in *MsgFeedMultiplePrices, opts ...grpc.CallOption) (*MsgFeedMultiplePricesResponse, error)
	SetPriceFeeder(ctx context.Context, in *MsgSetPriceFeeder, opts ...grpc.CallOption) (*MsgSetPriceFeederResponse, error)
	DeletePriceFeeder(ctx context.Context, in *MsgDeletePriceFeeder, opts ...grpc.CallOption) (*MsgDeletePriceFeederResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) FeedPrice(ctx context.Context, in *MsgFeedPrice, opts ...grpc.CallOption) (*MsgFeedPriceResponse, error) {
	out := new(MsgFeedPriceResponse)
	err := c.cc.Invoke(ctx, "/elys.oracle.Msg/FeedPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) FeedMultiplePrices(ctx context.Context, in *MsgFeedMultiplePrices, opts ...grpc.CallOption) (*MsgFeedMultiplePricesResponse, error) {
	out := new(MsgFeedMultiplePricesResponse)
	err := c.cc.Invoke(ctx, "/elys.oracle.Msg/FeedMultiplePrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetPriceFeeder(ctx context.Context, in *MsgSetPriceFeeder, opts ...grpc.CallOption) (*MsgSetPriceFeederResponse, error) {
	out := new(MsgSetPriceFeederResponse)
	err := c.cc.Invoke(ctx, "/elys.oracle.Msg/SetPriceFeeder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePriceFeeder(ctx context.Context, in *MsgDeletePriceFeeder, opts ...grpc.CallOption) (*MsgDeletePriceFeederResponse, error) {
	out := new(MsgDeletePriceFeederResponse)
	err := c.cc.Invoke(ctx, "/elys.oracle.Msg/DeletePriceFeeder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	FeedPrice(context.Context, *MsgFeedPrice) (*MsgFeedPriceResponse, error)
	FeedMultiplePrices(context.Context, *MsgFeedMultiplePrices) (*MsgFeedMultiplePricesResponse, error)
	SetPriceFeeder(context.Context, *MsgSetPriceFeeder) (*MsgSetPriceFeederResponse, error)
	DeletePriceFeeder(context.Context, *MsgDeletePriceFeeder) (*MsgDeletePriceFeederResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) FeedPrice(ctx context.Context, req *MsgFeedPrice) (*MsgFeedPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FeedPrice not implemented")
}
func (*UnimplementedMsgServer) FeedMultiplePrices(ctx context.Context, req *MsgFeedMultiplePrices) (*MsgFeedMultiplePricesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FeedMultiplePrices not implemented")
}
func (*UnimplementedMsgServer) SetPriceFeeder(ctx context.Context, req *MsgSetPriceFeeder) (*MsgSetPriceFeederResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPriceFeeder not implemented")
}
func (*UnimplementedMsgServer) DeletePriceFeeder(ctx context.Context, req *MsgDeletePriceFeeder) (*MsgDeletePriceFeederResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePriceFeeder not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_FeedPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFeedPrice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FeedPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.oracle.Msg/FeedPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FeedPrice(ctx, req.(*MsgFeedPrice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_FeedMultiplePrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFeedMultiplePrices)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FeedMultiplePrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.oracle.Msg/FeedMultiplePrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FeedMultiplePrices(ctx, req.(*MsgFeedMultiplePrices))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetPriceFeeder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPriceFeeder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPriceFeeder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.oracle.Msg/SetPriceFeeder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPriceFeeder(ctx, req.(*MsgSetPriceFeeder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePriceFeeder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePriceFeeder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePriceFeeder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elys.oracle.Msg/DeletePriceFeeder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePriceFeeder(ctx, req.(*MsgDeletePriceFeeder))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "elys.oracle.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FeedPrice",
			Handler:    _Msg_FeedPrice_Handler,
		},
		{
			MethodName: "FeedMultiplePrices",
			Handler:    _Msg_FeedMultiplePrices_Handler,
		},
		{
			MethodName: "SetPriceFeeder",
			Handler:    _Msg_SetPriceFeeder_Handler,
		},
		{
			MethodName: "DeletePriceFeeder",
			Handler:    _Msg_DeletePriceFeeder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "elys/oracle/tx.proto",
}

func (m *MsgFeedPrice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFeedPrice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFeedPrice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Source) > 0 {
		i -= len(m.Source)
		copy(dAtA[i:], m.Source)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Source)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.Price.Size()
		i -= size
		if _, err := m.Price.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFeedPriceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFeedPriceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFeedPriceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetPriceFeeder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPriceFeeder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPriceFeeder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IsActive {
		i--
		if m.IsActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Feeder) > 0 {
		i -= len(m.Feeder)
		copy(dAtA[i:], m.Feeder)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Feeder)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPriceFeederResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPriceFeederResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPriceFeederResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePriceFeeder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePriceFeeder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePriceFeeder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Feeder) > 0 {
		i -= len(m.Feeder)
		copy(dAtA[i:], m.Feeder)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Feeder)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePriceFeederResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePriceFeederResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePriceFeederResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFeedMultiplePrices) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFeedMultiplePrices) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFeedMultiplePrices) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Prices) > 0 {
		for iNdEx := len(m.Prices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Prices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFeedMultiplePricesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFeedMultiplePricesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFeedMultiplePricesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgFeedPrice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Price.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Source)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFeedPriceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetPriceFeeder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Feeder)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.IsActive {
		n += 2
	}
	return n
}

func (m *MsgSetPriceFeederResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePriceFeeder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Feeder)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeletePriceFeederResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFeedMultiplePrices) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Prices) > 0 {
		for _, e := range m.Prices {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgFeedMultiplePricesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgFeedPrice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFeedPrice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFeedPrice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Price.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFeedPriceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFeedPriceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFeedPriceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPriceFeeder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPriceFeeder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPriceFeeder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Feeder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsActive = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPriceFeederResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPriceFeederResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPriceFeederResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePriceFeeder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePriceFeeder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePriceFeeder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Feeder = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePriceFeederResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePriceFeederResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePriceFeederResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFeedMultiplePrices) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFeedMultiplePrices: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFeedMultiplePrices: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Prices = append(m.Prices, Price{})
			if err := m.Prices[len(m.Prices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFeedMultiplePricesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFeedMultiplePricesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFeedMultiplePricesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
