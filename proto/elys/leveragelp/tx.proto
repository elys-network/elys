syntax = "proto3";

package elys.leveragelp;

option go_package = "github.com/elys-network/elys/x/leveragelp/types";

import "gogoproto/gogo.proto";
import "elys/leveragelp/params.proto";
import "elys/leveragelp/types.proto";
import "elys/leveragelp/pool.proto";

// Msg defines the Msg service.
service Msg {
  rpc Open(MsgOpen) returns (MsgOpenResponse);
  rpc Close(MsgClose) returns (MsgCloseResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc UpdatePools(MsgUpdatePools) returns (MsgUpdatePoolsResponse);
  rpc Whitelist(MsgWhitelist) returns (MsgWhitelistResponse);
  rpc Dewhitelist(MsgDewhitelist) returns (MsgDewhitelistResponse);
}
message MsgOpen {
  string creator = 1;
  string collateralAsset = 2;
  string collateralAmount = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  uint64 ammPoolId = 4;
  string leverage = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string stopLossPrice = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message MsgOpenResponse {}

message MsgClose {
  string creator = 1;
  uint64 id = 2;
}

message MsgCloseResponse {}

message MsgUpdateParams {

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1;

  // NOTE: All parameters must be supplied.
  Params params = 2;
}

message MsgUpdateParamsResponse {}

message MsgUpdatePools {
  string authority = 1;
  repeated Pool pools = 2 [(gogoproto.nullable) = false];
}

message MsgUpdatePoolsResponse {}

message MsgWhitelist {
  string authority = 1;
  string whitelistedAddress = 2;
}

message MsgWhitelistResponse {}

message MsgDewhitelist {
  string authority = 1;
  string whitelistedAddress = 2;
}

message MsgDewhitelistResponse {}
