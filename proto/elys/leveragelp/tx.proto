syntax = "proto3";

package elys.leveragelp;

option go_package = "github.com/elys-network/elys/x/leveragelp/types";

import "gogoproto/gogo.proto";
import "elys/leveragelp/params.proto";
import "elys/leveragelp/types.proto";
import "elys/leveragelp/pool.proto";
import "elys/leveragelp/query.proto";


// Msg defines the Msg service.
service Msg {
  rpc Open           (MsgOpen) returns (MsgOpenResponse);
  rpc Close          (MsgClose) returns (MsgCloseResponse);
  rpc ClaimRewards   (MsgClaimRewards) returns (MsgClaimRewardsResponse);
  rpc UpdateParams   (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc AddPool       (MsgAddPool) returns (MsgAddPoolResponse);
  rpc RemovePool    (MsgRemovePool) returns (MsgRemovePoolResponse);
  rpc Whitelist      (MsgWhitelist) returns (MsgWhitelistResponse);
  rpc Dewhitelist    (MsgDewhitelist) returns (MsgDewhitelistResponse);
  rpc UpdateStopLoss (MsgUpdateStopLoss) returns (MsgUpdateStopLossResponse);
  rpc ClosePositions (MsgClosePositions) returns (MsgClosePositionsResponse);
}
message MsgOpen {
  string creator = 1;
  string collateral_asset = 2;
  string collateral_amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 amm_pool_id = 4;
  string leverage = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string stop_loss_price = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgOpenResponse {}

message MsgClose {
  string creator = 1;
  uint64 id = 2;
  string lp_amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgCloseResponse {}

message MsgClaimRewards {
  string sender = 1;
  repeated uint64 ids = 2;
}

message MsgClaimRewardsResponse {}

message MsgUpdateParams {

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1;

  // NOTE: All parameters must be supplied.
  Params params = 2;
}

message MsgUpdateParamsResponse {}

message MsgWhitelist {
  string authority = 1;
  string whitelisted_address = 2;
}

message MsgWhitelistResponse {}

message MsgDewhitelist {
  string authority = 1;
  string whitelisted_address = 2;
}

message MsgDewhitelistResponse {}

message MsgUpdateStopLoss {
  string creator = 1;
  uint64 position = 2;
  string price = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgUpdateStopLossResponse {}

message AddPool {
  uint64 amm_pool_id = 1;
  string leverage_max = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgAddPool {
  string  authority = 1;
  AddPool pool = 2 [(gogoproto.nullable) = false];
}

message MsgAddPoolResponse {}

message MsgRemovePool {
  string authority = 1;
  uint64 id = 2;
}

message MsgRemovePoolResponse {}

message MsgClosePositions {
  string creator = 1;
  repeated PositionRequest liquidate = 2;
  repeated PositionRequest stop_loss = 3;
}

message MsgClosePositionsResponse {}

