syntax = "proto3";

package elys.oracle;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "elys/oracle/band_price.proto";
import "elys/oracle/asset_info.proto";
import "elys/oracle/price.proto";
import "elys/oracle/price_feeder.proto";
import "elys/oracle/params.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/elys-network/elys/x/oracle/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc FeedPrice(MsgFeedPrice) returns (MsgFeedPriceResponse);
  rpc FeedMultiplePrices(MsgFeedMultiplePrices)
      returns (MsgFeedMultiplePricesResponse);
  rpc SetPriceFeeder(MsgSetPriceFeeder) returns (MsgSetPriceFeederResponse);
  rpc DeletePriceFeeder(MsgDeletePriceFeeder)
      returns (MsgDeletePriceFeederResponse);

  // proposals
  rpc RemoveAssetInfo(MsgRemoveAssetInfo) returns (MsgRemoveAssetInfoResponse);
  rpc AddPriceFeeders(MsgAddPriceFeeders) returns (MsgAddPriceFeedersResponse);
  rpc RemovePriceFeeders(MsgRemovePriceFeeders)
      returns (MsgRemovePriceFeedersResponse);
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // this line is used by starport scaffolding # proto/tx/rpc
  rpc CreateAssetInfo(MsgCreateAssetInfo) returns (MsgCreateAssetInfoResponse);
}
message MsgFeedPrice {
  option (cosmos.msg.v1.signer) = "provider";
  option (amino.name) = "oracle/MsgFeedPrice";
  string asset = 1;
  string price = 2 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string source = 3;
  string provider = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgFeedPriceResponse {}

message MsgSetPriceFeeder {
  option (cosmos.msg.v1.signer) = "feeder";
  option (amino.name) = "oracle/MsgSetPriceFeeder";
  string feeder = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  bool is_active = 2;
}

message MsgSetPriceFeederResponse {}

message MsgDeletePriceFeeder {
  option (cosmos.msg.v1.signer) = "feeder";
  option (amino.name) = "oracle/MsgDeletePriceFeeder";
  string feeder = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgDeletePriceFeederResponse {}

message MsgFeedMultiplePrices {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "oracle/MsgFeedMultiplePrices";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated Price prices = 2 [ (gogoproto.nullable) = false ];
}

message MsgFeedMultiplePricesResponse {}

message MsgRemoveAssetInfo {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "oracle/MsgRemoveAssetInfo";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string denom = 2;
}

message MsgRemoveAssetInfoResponse {}

message MsgAddPriceFeeders {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "oracle/MsgAddPriceFeeders";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated string feeders = 2;
}

message MsgAddPriceFeedersResponse {}

message MsgRemovePriceFeeders {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "oracle/MsgRemovePriceFeeders";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated string feeders = 2;
}

message MsgRemovePriceFeedersResponse {}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "oracle/MsgUpdateParams";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateAssetInfo {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "oracle/MsgCreateAssetInfo";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string denom = 2;
  string display = 3;
  string band_ticker = 4;
  string elys_ticker = 5;
  uint64 decimal = 6;
}

message MsgCreateAssetInfoResponse {}
