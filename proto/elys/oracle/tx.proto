syntax = "proto3";
package elys.oracle;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "elys/oracle/band_price.proto";
import "elys/oracle/asset_info.proto";
import "elys/oracle/price.proto";
import "elys/oracle/price_feeder.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/elys-network/elys/x/oracle/types";

// Msg defines the Msg service.
service Msg {
  rpc FeedPrice(MsgFeedPrice) returns (MsgFeedPriceResponse);
  rpc FeedMultiplePrices(MsgFeedMultiplePrices) returns (MsgFeedMultiplePricesResponse);
  rpc SetPriceFeeder(MsgSetPriceFeeder) returns (MsgSetPriceFeederResponse);
  rpc DeletePriceFeeder(MsgDeletePriceFeeder) returns (MsgDeletePriceFeederResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgFeedPrice {
  string asset = 1;
  string price = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string source = 3;
  string provider = 4;
}
message MsgFeedPriceResponse {}

message MsgSetPriceFeeder {
  string feeder = 1;
  bool is_active = 2;
}
message MsgSetPriceFeederResponse {}

message MsgDeletePriceFeeder {
  string feeder = 1;
}
message MsgDeletePriceFeederResponse {}

message MsgFeedMultiplePrices {
  string creator = 1;
  repeated Price prices = 2 [ (gogoproto.nullable) = false ];
}

message MsgFeedMultiplePricesResponse {
}

// this line is used by starport scaffolding # proto/tx/message
