syntax = "proto3";
package elysnetwork.elys.oracle;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/oracle/params.proto";
import "elys/oracle/coin_rates.proto";
import "elys/oracle/asset_info.proto";
import "elys/oracle/price.proto";
import "elys/oracle/price_feeder.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/elys-network/elys/x/oracle/types";

// Query defines the gRPC querier service.
service Query {
	// Parameters queries the parameters of the module.
	rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/params";
	}
  	// CoinRatesResult defines a rpc handler method for MsgCoinRatesData.
  	rpc CoinRatesResult(QueryCoinRatesRequest) returns (QueryCoinRatesResponse) {
		option (google.api.http).get = "/elys/oracle/coin_rates_result/{request_id}";
  	}
  	// LastCoinRatesId query the last CoinRates result id
  	rpc LastCoinRatesId(QueryLastCoinRatesIdRequest) returns (QueryLastCoinRatesIdResponse) {
		option (google.api.http).get = "/elys/oracle/last_coin_rates_id";
  	}
	// Queries a AssetInfo by denom.
	rpc AssetInfo(QueryGetAssetInfoRequest) returns (QueryGetAssetInfoResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/asset_info/{denom}";
	}
	// Queries a list of AssetInfo items.
	rpc AssetInfoAll(QueryAllAssetInfoRequest) returns (QueryAllAssetInfoResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/asset_info";
	}
    // Queries a Price by asset.
    rpc Price(QueryGetPriceRequest) returns (QueryGetPriceResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/price/{asset}";
	}
	// Queries a list of Price items.
	rpc PriceAll(QueryAllPriceRequest) returns (QueryAllPriceResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/price";
	}
	// Queries a PriceFeeder by feeder.
	rpc PriceFeeder(QueryGetPriceFeederRequest) returns (QueryGetPriceFeederResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/price_feeder/{feeder}";
	}

	// Queries a list of PriceFeeder items.
	rpc PriceFeederAll(QueryAllPriceFeederRequest) returns (QueryAllPriceFeederResponse) {
		option (google.api.http).get = "/elys-network/elys/oracle/price_feeder";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryCoinRatesRequest {int64 request_id = 1;}

message QueryCoinRatesResponse {
  CoinRatesResult result = 1;
}

message QueryLastCoinRatesIdRequest {}

message QueryLastCoinRatesIdResponse {int64 request_id = 1;}

message QueryGetAssetInfoRequest {
	string denom = 1;
}

message QueryGetAssetInfoResponse {
	AssetInfo assetInfo = 1 [(gogoproto.nullable) = false];
}

message QueryAllAssetInfoRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAssetInfoResponse {
	repeated AssetInfo assetInfo = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPriceRequest {
	string asset = 1;
}

message QueryGetPriceResponse {
	Price price = 1 [(gogoproto.nullable) = false];
}

message QueryAllPriceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPriceResponse {
	repeated Price price = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetPriceFeederRequest {
	string feeder = 1;
}

message QueryGetPriceFeederResponse {
	PriceFeeder priceFeeder = 1 [(gogoproto.nullable) = false];
}

message QueryAllPriceFeederRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPriceFeederResponse {
	repeated PriceFeeder priceFeeder = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
