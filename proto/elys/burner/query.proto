syntax = "proto3";

package elys.burner;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/burner/params.proto";
import "elys/burner/history.proto";

option go_package = "github.com/elys-network/elys/x/burner/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/elys-network/elys/burner/params";
  
  }
  
  // Queries a list of History items.
  rpc History    (QueryGetHistoryRequest) returns (QueryGetHistoryResponse) {
    option (google.api.http).get = "/elys-network/elys/burner/history/{timestamp}/{denom}";
  
  }
  rpc HistoryAll (QueryAllHistoryRequest) returns (QueryAllHistoryResponse) {
    option (google.api.http).get = "/elys-network/elys/burner/history";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetHistoryRequest {
  string timestamp = 1;
  string denom     = 2;
}

message QueryGetHistoryResponse {
  History history = 1 [(gogoproto.nullable) = false];
}

message QueryAllHistoryRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllHistoryResponse {
  repeated History                                history    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

