syntax = "proto3";

package elys.accountedpool;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/accountedpool/accounted_pool.proto";

option go_package = "github.com/elys-network/elys/x/accountedpool/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a list of AccountedPool items.
  rpc AccountedPool    (QueryGetAccountedPoolRequest) returns (QueryGetAccountedPoolResponse) {
    option (google.api.http).get = "/elys-network/elys/accountedpool/accounted_pool/{pool_id}";
  }
  rpc AccountedPoolAll (QueryAllAccountedPoolRequest) returns (QueryAllAccountedPoolResponse) {
    option (google.api.http).get = "/elys-network/elys/accountedpool/accounted_pool";
  }
}

message QueryGetAccountedPoolRequest {
  uint64 pool_id = 1;
}

message QueryGetAccountedPoolResponse {
  AccountedPool accounted_pool = 1 [(gogoproto.nullable) = false];
}

message QueryAllAccountedPoolRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAccountedPoolResponse {
  repeated AccountedPool                          accounted_pool = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination    = 2;
}

