syntax = "proto3";

package elys.tier;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/tier/params.proto";
import "elys/tier/portfolio.proto";

option go_package = "github.com/elys-network/elys/x/tier/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/elys-network/elys/membershiptier/params";
  
  }
  
  // Queries a list of Portfolio items.
  rpc Portfolio    (QueryGetPortfolioRequest) returns (QueryGetPortfolioResponse) {
    option (google.api.http).get = "/elys-network/elys/membershiptier/portfolio/{user}/{assetType}";
  
  }
  rpc PortfolioAll (QueryAllPortfolioRequest) returns (QueryAllPortfolioResponse) {
    option (google.api.http).get = "/elys-network/elys/membershiptier/portfolio";
  
  }
  
  // Queries a list of CalculateDiscount items.
  rpc CalculateDiscount (QueryCalculateDiscountRequest) returns (QueryCalculateDiscountResponse) {
    option (google.api.http).get = "/elys-network/elys/membershiptier/calculate_discount/{user}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPortfolioRequest {
  string user      = 1;
  string assetType = 2;
}

message QueryGetPortfolioResponse {
  string total_portfolio = 1;
}

message QueryAllPortfolioRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPortfolioResponse {
  repeated Portfolio                              portfolio  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryCalculateDiscountRequest {
  string user = 1;
}

message QueryCalculateDiscountResponse {
  string discount = 1;
  string tier = 2;
  string portfolio = 3;
}

