syntax = "proto3";

package elys.tradeshield;

import "gogoproto/gogo.proto";
import "elys/tradeshield/types.proto";
import "elys/tradeshield/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/elys-network/elys/x/tradeshield/types";

// Msg defines the Msg service.
service Msg {
  rpc CreatePendingSpotOrder      (MsgCreatePendingSpotOrder     ) returns (MsgCreatePendingSpotOrderResponse     );
  rpc UpdatePendingSpotOrder      (MsgUpdatePendingSpotOrder     ) returns (MsgUpdatePendingSpotOrderResponse     );
  rpc CreatePendingPerpetualOrder (MsgCreatePendingPerpetualOrder) returns (MsgCreatePendingPerpetualOrderResponse);
  rpc UpdatePendingPerpetualOrder (MsgUpdatePendingPerpetualOrder) returns (MsgUpdatePendingPerpetualOrderResponse);
  rpc CancelPerpetualOrders       (MsgCancelPerpetualOrders      ) returns (MsgCancelPerpetualOrdersResponse      );
  rpc UpdateParams                (MsgUpdateParams               ) returns (MsgUpdateParamsResponse               );
  rpc ExecuteOrders               (MsgExecuteOrders              ) returns (MsgExecuteOrdersResponse              );
  rpc CancelSpotOrders            (MsgCancelSpotOrders           ) returns (MsgCancelSpotOrdersResponse           );
}
message MsgCreatePendingSpotOrder {
  SpotOrderType            order_type         = 1;
  OrderPrice               order_price        = 2;
  cosmos.base.v1beta1.Coin order_amount       = 3;
  string                   owner_address      = 4;
  string                   order_target_denom = 5;
}

message MsgCreatePendingSpotOrderResponse {
  uint64 order_id = 1;
}

message MsgUpdatePendingSpotOrder {
  string owner_address = 1;
  uint64 order_id      = 2;
  OrderPrice               order_price        = 3;
}

message MsgUpdatePendingSpotOrderResponse {}

message MsgCreatePendingPerpetualOrder {
  PerpetualOrderType order_type = 1;
  OrderPrice trigger_price = 2;
  cosmos.base.v1beta1.Coin collateral = 3 [(gogoproto.nullable) = false];
  string owner_address = 4;
  string trading_asset = 5;
  PerpetualPosition position = 6;
  string leverage = 7 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable) = false
  ];
  string take_profit_price = 8 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable) = false
  ];
  string stop_loss_price = 9 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable) = false
  ];
}

message MsgCreatePendingPerpetualOrderResponse {
  uint64 order_id = 1;
}

message MsgUpdatePendingPerpetualOrder {
  string owner_address = 1;
  uint64 order_id      = 2;
  OrderPrice order_price = 3;
}

message MsgUpdatePendingPerpetualOrderResponse {}

message MsgCancelPerpetualOrders {
  string owner_address = 1;
  repeated uint64 order_ids       = 2;
}

message MsgCancelPerpetualOrdersResponse {}

message MsgUpdateParams {
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;
  
  // NOTE: All parameters must be supplied.
  Params params = 2;
}

message MsgUpdateParamsResponse {}

message MsgExecuteOrders {
           string creator            = 1;
  repeated uint64 spot_order_ids       = 2;
  repeated uint64 perpetual_order_ids = 3;
}

message MsgExecuteOrdersResponse {}

message MsgUpdateStopLossResponse {}

message MsgCancelSpotOrders {
           string creator              = 1;
  repeated uint64 spot_order_ids       = 2;
}

message MsgCancelSpotOrdersResponse {}