syntax = "proto3";

package elys.tradeshield;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/tradeshield/params.proto";
import "elys/tradeshield/types.proto";

option go_package = "github.com/elys-network/elys/x/tradeshield/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/params";
  
  }
  
  // Queries a list of PendingSpotOrder items.
  rpc PendingSpotOrder    (QueryGetPendingSpotOrderRequest) returns (QueryGetPendingSpotOrderResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_spot_order/{id}";
  
  }
  rpc PendingSpotOrderAll (QueryAllPendingSpotOrderRequest) returns (QueryAllPendingSpotOrderResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_spot_order";
  
  }
  
  // Queries a list of PendingPerpetualOrder items.
  rpc PendingPerpetualOrder    (QueryGetPendingPerpetualOrderRequest) returns (QueryGetPendingPerpetualOrderResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_perpetual_order/{id}";
  
  }
  rpc PendingPerpetualOrderAll (QueryAllPendingPerpetualOrderRequest) returns (QueryAllPendingPerpetualOrderResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_perpetual_order";
  
  }
  
  // Queries a list of PendingPerpetualOrderForAddress items.
  rpc PendingPerpetualOrderForAddress (QueryPendingPerpetualOrderForAddressRequest) returns (QueryPendingPerpetualOrderForAddressResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_perpetual_order_for_address/{address}";
  
  }
  
  // Queries a list of PendingSpotOrderForAddress items.
  rpc PendingSpotOrderForAddress (QueryPendingSpotOrderForAddressRequest) returns (QueryPendingSpotOrderForAddressResponse) {
    option (google.api.http).get = "/elys-network/elys/tradeshield/pending_spot_order_for_address/{address}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetPendingSpotOrderRequest {
  uint64 id = 1;
}

message QueryGetPendingSpotOrderResponse {
  SpotOrder pending_spot_order = 1 [(gogoproto.nullable) = false];
}

message QueryAllPendingSpotOrderRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPendingSpotOrderResponse {
  repeated SpotOrder                              pending_spot_order = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}

message QueryGetPendingPerpetualOrderRequest {
  uint64 id = 1;
}

message QueryGetPendingPerpetualOrderResponse {
  PerpetualOrder pending_perpetual_order = 1 [(gogoproto.nullable) = false];
}

message QueryAllPendingPerpetualOrderRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPendingPerpetualOrderResponse {
  repeated PerpetualOrder                         pending_perpetual_order = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination              = 2;
}

message QueryPendingPerpetualOrderForAddressRequest {
  string address = 1;
  Status status = 2;
}

message QueryPendingPerpetualOrderForAddressResponse {
  repeated PerpetualOrder                         pending_perpetual_orders = 1 [(gogoproto.nullable) = false];
}

message QueryPendingSpotOrderForAddressRequest {
  string address = 1;
  Status status = 2;
}

message QueryPendingSpotOrderForAddressResponse {
  repeated SpotOrder                              pending_spot_orders = 1 [(gogoproto.nullable) = false];
}

