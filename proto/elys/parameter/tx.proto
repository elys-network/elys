syntax = "proto3";

package elys.parameter;

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/elys-network/elys/x/parameter/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UpdateMinCommission(MsgUpdateMinCommission)
      returns (MsgUpdateMinCommissionResponse);
  rpc UpdateMaxVotingPower(MsgUpdateMaxVotingPower)
      returns (MsgUpdateMaxVotingPowerResponse);
  rpc UpdateMinSelfDelegation(MsgUpdateMinSelfDelegation)
      returns (MsgUpdateMinSelfDelegationResponse);
  rpc UpdateBrokerAddress(MsgUpdateBrokerAddress)
      returns (MsgUpdateBrokerAddressResponse);
  rpc UpdateTotalBlocksPerYear(MsgUpdateTotalBlocksPerYear)
      returns (MsgUpdateTotalBlocksPerYearResponse);
  rpc UpdateWasmConfig(MsgUpdateWasmConfig)
      returns (MsgUpdateWasmConfigResponse);
  rpc UpdateRewardsDataLifetime(MsgUpdateRewardsDataLifetime)
      returns (MsgUpdateRewardsDataLifetimeResponse);
}
message MsgUpdateMinCommission {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateMinCommission";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string min_commission = 2;
}

message MsgUpdateMinCommissionResponse {}

message MsgUpdateMaxVotingPower {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateMaxVotingPower";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string max_voting_power = 2;
}

message MsgUpdateMaxVotingPowerResponse {}

message MsgUpdateMinSelfDelegation {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateMinSelfDelegation";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string min_self_delegation = 2;
}

message MsgUpdateMinSelfDelegationResponse {}

message MsgUpdateBrokerAddress {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateBrokerAddress";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string broker_address = 2;
}

message MsgUpdateBrokerAddressResponse {}

message MsgUpdateTotalBlocksPerYear {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateTotalBlocksPerYear";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  int64 total_blocks_per_year = 2;
}

message MsgUpdateTotalBlocksPerYearResponse {}

message MsgUpdateWasmConfig {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateWasmConfig";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string wasm_max_label_size = 2;
  string wasm_max_size = 3;
  string wasm_max_proposal_wasm_size = 4;
}

message MsgUpdateWasmConfigResponse {}

message MsgUpdateRewardsDataLifetime {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "parameter/MsgUpdateRewardsDataLifetime";
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string rewards_data_lifetime = 2;
}

message MsgUpdateRewardsDataLifetimeResponse {}
