syntax = "proto3";

package elysnetwork.elys.incentive;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/incentive/params.proto";
import "elys/incentive/distribution.proto";

option go_package = "github.com/elys-network/elys/x/incentive/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/params";
  
  }
  
  // ValidatorOutstandingRewards queries rewards of a validator address.
  rpc ValidatorOutstandingRewards (QueryValidatorOutstandingRewardsRequest) returns (QueryValidatorOutstandingRewardsResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/validators/{validator_address}/outstanding_rewards";
  
  }
  
  // ValidatorCommission queries accumulated commission for a validator.
  rpc ValidatorCommission (QueryValidatorCommissionRequest) returns (QueryValidatorCommissionResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/validators/{validator_address}/commission";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryValidatorOutstandingRewardsRequest {
  string validator_address = 1;
}

message QueryValidatorOutstandingRewardsResponse {
  ValidatorOutstandingRewards rewards = 1 [(gogoproto.nullable) = false];
}

message QueryValidatorCommissionRequest {
  string validator_address = 1;
}

message QueryValidatorCommissionResponse {
  // commission defines the commision the validator received.
  ValidatorAccumulatedCommission commission = 1 [(gogoproto.nullable) = false];
}

