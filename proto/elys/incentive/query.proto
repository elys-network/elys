syntax = "proto3";

package elys.incentive;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "elys/commitment/params.proto";

option go_package = "github.com/elys-network/elys/x/incentive/types";

// Query defines the gRPC querier service.
service Query {
  // Calculate APR
  rpc Apr (QueryAprRequest) returns (QueryAprResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/apr/{withdraw_type}/{denom}";
  }

  // Calculate APRs
  rpc Aprs (QueryAprsRequest) returns (QueryAprsResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/aprs";
  }

  // Queries PoolReward items
  rpc PoolRewards(QueryPoolRewardsRequest) returns (QueryPoolRewardsResponse) {
    option (google.api.http).get = "/elys-network/elys/incentive/pool_rewards";
  }
}

message QueryAprRequest {
  elys.commitment.EarnType withdraw_type = 1;
  string denom = 2;
}

message QueryAprResponse {
  string apr = 1 [
      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
      (gogoproto.nullable) = false
  ]; 
}

message QueryAprsRequest {
}

message QueryAprsResponse {
  string usdc_apr_usdc = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string eden_apr_usdc = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string usdc_apr_edenb = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string eden_apr_edenb = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string usdc_apr_eden = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string eden_apr_eden = 6 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string edenb_apr_eden = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string usdc_apr_elys = 8 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string eden_apr_elys = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  string edenb_apr_elys = 10 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message QueryPoolRewardsRequest {
    repeated uint64 pool_ids    = 1;
    cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message PoolRewards {
  uint64 pool_id = 1;
  string rewards_usd = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  repeated cosmos.base.v1beta1.Coin reward_coins = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  cosmos.base.v1beta1.Coin eden_forward = 4 [
    (gogoproto.nullable) = false
  ];
}

message QueryPoolRewardsResponse {
  repeated PoolRewards pools = 1 [ (gogoproto.nullable) = false ];
}
  