syntax = "proto3";

package elysnetwork.elys.amm;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/elys-network/elys/x/amm/types";

// Msg defines the Msg service.
service Msg {
  rpc CreatePool (MsgCreatePool) returns (MsgCreatePoolResponse);
  rpc JoinPool   (MsgJoinPool  ) returns (MsgJoinPoolResponse  );
  rpc ExitPool   (MsgExitPool  ) returns (MsgExitPoolResponse  );
}
message MsgCreatePool {
           string                   creator         = 1;
  repeated cosmos.base.v1beta1.Coin weights         = 2 [(gogoproto.nullable) = false];
  repeated cosmos.base.v1beta1.Coin initialDeposit  = 3 [(gogoproto.nullable) = false];
           uint64                   swapFee         = 4;
           uint64                   exitFee         = 5;
           string                   futureGovernor  = 6;
  repeated uint64                   scallingFactors = 7;
}

message MsgCreatePoolResponse {}

message MsgJoinPool {
           string                   creator        = 1;
           uint64                   poolId         = 2;
  repeated cosmos.base.v1beta1.Coin maxAmountsIn   = 3 [(gogoproto.nullable) = false];
           string                   shareAmountOut = 4;
}

message MsgJoinPoolResponse {}

message MsgExitPool {
           string                   creator       = 1;
           uint64                   poolId        = 2;
  repeated cosmos.base.v1beta1.Coin maxAmountsOut = 3 [(gogoproto.nullable) = false];
           string                   shareAmountIn = 4;
}

message MsgExitPoolResponse {}

