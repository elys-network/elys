syntax = "proto3";
package elys.vaults;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "elys/vaults/params.proto";
import "elys/vaults/vault.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/elys-network/elys/v5/x/vaults/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/elys-network/elys/vaults/params";
  }

  // Vault queries a vault by its ID.
  rpc Vault(QueryVaultRequest) returns (QueryVaultResponse) {
    option (google.api.http).get = "/elys-network/elys/vaults/vault/{vault_id}";
  }

  // Vaults queries all vaults.
  rpc Vaults(QueryVaultsRequest) returns (QueryVaultsResponse) {
    option (google.api.http).get = "/elys-network/elys/vaults/vaults";
  }

  // VaultValue queries the USD value of a vault.
  rpc VaultValue(QueryVaultValue) returns (QueryVaultValueResponse) {
    option (google.api.http).get = "/elys-network/elys/vaults/vault_value/{vault_id}";
  }

  // VaultPositions queries the positions of a vault.
  rpc VaultPositions(QueryVaultPositionsRequest) returns (QueryVaultPositionsResponse) {
    option (google.api.http).get = "/elys-network/elys/vaults/vault_positions/{vault_id}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message QueryVaultRequest {
  uint64 vault_id = 1;
}

message QueryVaultResponse {
  Vault vault = 1 [ (gogoproto.nullable) = false ];
}

message QueryVaultsRequest {
}

message QueryVaultsResponse {
  repeated Vault vaults = 1 [ (gogoproto.nullable) = false ];
}

message QueryVaultValue {
  uint64 vault_id = 1;
}

message QueryVaultValueResponse {
  string usd_value = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message PositionToken {
  string token_denom = 1;
  string token_amount = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string token_usd_value = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message QueryVaultPositionsRequest {
  uint64 vault_id = 1;
}

message QueryVaultPositionsResponse {
  repeated PositionToken positions = 1 [ (gogoproto.nullable) = false ];
}