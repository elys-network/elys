syntax = "proto3";

package elys.tokenomics;

import "elys/tokenomics/airdrop.proto";
import "elys/tokenomics/genesis_inflation.proto";
import "elys/tokenomics/inflation_entry.proto";
import "elys/tokenomics/time_based_inflation.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/elys-network/elys/x/tokenomics/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc CreateAirdrop(MsgCreateAirdrop) returns (MsgCreateAirdropResponse);
  rpc UpdateAirdrop(MsgUpdateAirdrop) returns (MsgUpdateAirdropResponse);
  rpc DeleteAirdrop(MsgDeleteAirdrop) returns (MsgDeleteAirdropResponse);
  rpc ClaimAirdrop(MsgClaimAirdrop) returns (MsgClaimAirdropResponse);
  rpc UpdateGenesisInflation(MsgUpdateGenesisInflation)
      returns (MsgUpdateGenesisInflationResponse);
  rpc CreateTimeBasedInflation(MsgCreateTimeBasedInflation)
      returns (MsgCreateTimeBasedInflationResponse);
  rpc UpdateTimeBasedInflation(MsgUpdateTimeBasedInflation)
      returns (MsgUpdateTimeBasedInflationResponse);
  rpc DeleteTimeBasedInflation(MsgDeleteTimeBasedInflation)
      returns (MsgDeleteTimeBasedInflationResponse);
}
message MsgCreateAirdrop {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgCreateAirdrop";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string intent = 2;
  uint64 amount = 3;
  uint64 expiry = 4;
}

message MsgCreateAirdropResponse {}

message MsgUpdateAirdrop {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgUpdateAirdrop";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string intent = 2;
  uint64 amount = 3;
  uint64 expiry = 4;
}

message MsgUpdateAirdropResponse {}

message MsgDeleteAirdrop {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgDeleteAirdrop";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string intent = 2;
}

message MsgDeleteAirdropResponse {}

message MsgClaimAirdrop {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "tokenomics/MsgClaimAirdrop";
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}
message MsgClaimAirdropResponse {}

message MsgUpdateGenesisInflation {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgUpdateGenesisInflation";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  InflationEntry inflation = 3;
  uint64 seed_vesting = 4;
  uint64 strategic_sales_vesting = 5;
}

message MsgUpdateGenesisInflationResponse {}

message MsgCreateTimeBasedInflation {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgCreateTimeBasedInflation";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 start_block_height = 2;
  uint64 end_block_height = 3;
  string description = 4;
  InflationEntry inflation = 5;
}

message MsgCreateTimeBasedInflationResponse {}

message MsgUpdateTimeBasedInflation {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgUpdateTimeBasedInflation";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 start_block_height = 2;
  uint64 end_block_height = 3;
  string description = 4;
  InflationEntry inflation = 5;
}

message MsgUpdateTimeBasedInflationResponse {}

message MsgDeleteTimeBasedInflation {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "tokenomics/MsgDeleteTimeBasedInflation";
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 start_block_height = 2;
  uint64 end_block_height = 3;
}

message MsgDeleteTimeBasedInflationResponse {}
