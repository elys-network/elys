syntax = "proto3";

package elys.clob;

option go_package = "github.com/elys-network/elys/v7/x/clob/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  ORDER_TYPE_LIMIT_BUY = 1;
  ORDER_TYPE_LIMIT_SELL = 2;
  ORDER_TYPE_MARKET_BUY = 3;
  ORDER_TYPE_MARKET_SELL = 4;
}

// key = market_id + is_long + price + counter
message OrderId {
  uint64 market_id = 1;
  OrderType order_type = 2;
  int64 price_tick = 3;
  uint64 counter = 4;
}

message PerpetualOrder {
  OrderId order_id = 1 [ (gogoproto.nullable) = false ];
  string owner = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 sub_account_id = 3;
  string amount = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string filled = 5 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// key = owner + sub_account_id + market_id + is_long + price + counter
// A subaccount can hold multiple orders in case of cross margin account
message PerpetualOrderOwner {
  string owner = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 sub_account_id = 2;
  OrderId order_id = 3 [ (gogoproto.nullable) = false ];
}